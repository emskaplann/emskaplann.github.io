{"version":3,"sources":["components/sub-components/SideNav.js","services/UserService.js","components/main-components/LoginPage.js","components/sub-components/NewProjectModal.js","components/sub-components/UpcomingTasks.js","components/sub-components/RecentlyCompletedTasks.js","components/sub-components/ProjectCardsComponent.js","components/main-components/DashBoard.js","services/TagService.js","components/sub-components/ProjectTitleComponent.js","services/NoteService.js","components/sub-components/NotesCard.js","components/sub-components/SingleItem.js","components/sub-components/Checklist.js","components/sub-components/TaskModal.js","services/ChecklistService.js","services/ItemService.js","components/sub-components/AllTasks.js","components/sub-components/NewTaskModal.js","components/main-components/Projects.js","services/ProjectService.js","services/TaskService.js","components/main-components/MainViewRenderProps.js","App.js","serviceWorker.js","index.js"],"names":["isActive","location","pathName","pathname","includes","SideNavPage","history","children","firstProjectId","style","position","onSelect","selected","to","push","Toggle","Nav","defaultActiveKey","eventKey","active","className","fontSize","UserService","component","createUser","user","fetch","workingURL","method","headers","Accept","body","JSON","stringify","then","response","json","token","user_id","localStorage","userId","setState","loggedInUserId","login","loggedIn","this","handleClick","signup","username","password","parent","logUserIn","LoginPage","bool","useState","setUsername","setPassword","setSignup","Container","Form","Group","controlId","Label","Control","placeholder","value","onChange","e","target","type","Button","size","backgroundColor","borderColor","onClick","variant","NewProjectModal","state","show","props","project","date","description","name","priority","handleName","handleDesc","handleChange","handleSelectChange","Modal","Header","Title","Body","as","Row","column","sm","Col","event","Footer","handleModalClose","handleProjectSubmit","React","Component","UpcomingTasks","tasks","dateFromState","completeTask","upcomingTasks","filter","task","Date","deadline","setHours","valueOf","map","Card","color","marginLeft","ListGroup","Item","key","id","title","text","getSpanText","spanText","length","marginTop","alignSelf","console","log","RecentlyCompletedTasks","todaysDate","setDate","getDate","completed_tasks","is_completed","sort","a","b","slice","width","maxWidth","idx","renderRow","row","index","ProjectCardsComponent","projects","openModal","pros","arrayOfArrays","i","prosInRows","renderRows","DashBoard","showNPM","allTasks","obj","newObj","authProps","projectService","postProject","taskId","taskService","inbox","trash","fluid","TagSerivce","productionURL","devURL","projectId","tags","ProjectTitleComponent","editing","isEditing","setName","desc","setDesc","updateProject","handleSubmit","NoteService","fetchNotesForProject","notes","createNote","note","deleteNote","noteId","deletedNote","NotesCard","noteService","openOrCloseModal","isModalHidden","renderForm","autoFocus","border","SingleItem","completeItem","itemId","itemService","item","checklistId","deleteItem","Checklist","renderItems","items","checklist","addItem","preventDefault","createNewItem","onSubmit","showItems","TaskModal","newList","checklistService","createChecklist","closeModal","checklists","ChecklistService","fetchChecklists","r","ItemService","newItem","oldChecklist","find","list","newChecklist","Object","assign","updateChecklistsWith","editedItem","oldItem","AllTasks","nextProps","nextState","NewTaskModal","handleTitle","handleProjectSelect","newTask","toUTCString","handleTaskSubmit","renderSelect","defaultValue","Projects","showNTM","tagService","completedTasks","ProjectService","fetchProjects","status","statusText","flat","catch","reason","newProject","postTask","project_id","projectCopy","newProjects","updatedProject","proj","TaskService","fetchAllTasksFor","editedTask","MainViewRenderProps","findProjectWith","parseInt","App","logout","clear","fetchForFirstProjectId","showSideNavWithMain","SideNav","path","exact","useParams","Navbar","Brand","href","Collapse","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2885ed69.chunk.js","sourcesContent":["import React from 'react'\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav'\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css'\n\n\nconst isActive = (location, pathName) => location.pathname.includes(pathName) ? true : false\n\nconst SideNavPage = ({ location, history, children, firstProjectId }) => {\n  return (\n    <>\n      <SideNav\n        style={{ position: 'fixed' }}\n        onSelect={(selected) => {\n          const to = '/' + selected\n          if (location.pathname !== to) {\n            history.push(to)\n          }\n        }}\n      >\n        <SideNav.Toggle />\n        <SideNav.Nav defaultActiveKey='/dashboard'>\n          <NavItem eventKey=\"dashboard\" active={isActive(location, '/dashboard')}>\n            <NavIcon >\n              <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\n            </NavIcon>\n            <NavText>\n              DashBoard\n                  </NavText>\n          </NavItem>\n          <NavItem eventKey={`projects/${firstProjectId}`} active={isActive(location, '/projects')}>\n            <NavIcon>\n              <i className=\"fa fa-fw fa-list-alt\" style={{ fontSize: '1.75em' }} />\n            </NavIcon>\n            <NavText>\n              Projects\n                  </NavText>\n          </NavItem>\n          {/* <NavItem eventKey=\"tasks\" active={isActive(location, '/tasks')}>\n            <NavIcon>\n              <i className=\"fa fa-fw fa-tasks\" style={{ fontSize: '1.75em' }} />\n            </NavIcon>\n            <NavText>\n              Tasks\n                  </NavText>\n          </NavItem> */}\n        </SideNav.Nav>\n      </SideNav>\n      {children}\n    </>\n  )\n}\n\nexport default SideNavPage\n","class UserService {\n  constructor(component) {\n    this.component = component\n    this.workingURL = 'https://arcane-sands-50858.herokuapp.com'\n    // this.workingURL = 'http://localhost:3000'\n  }\n\n\n  createUser = (user) => {\n    fetch(`${this.workingURL}/users`, { //eslint-disable-line\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    })\n      .then(response => response.json())\n      .then(({ token, user_id }) => {\n        localStorage.token = token\n        localStorage.userId = user_id\n        this.component.setState({\n          token: token,\n          loggedInUserId: user_id,\n        })\n      })\n  }\n\n  login = (user) => {\n    fetch(`${this.workingURL}/login`, { //eslint-disable-line\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    })\n      .then(response => response.json())\n      .then(({ token, user_id }) => {\n        localStorage.token = token\n        localStorage.userId = user_id\n        this.component.setState({\n          token: token,\n          loggedInUserId: user_id,\n          loggedIn: true\n        })\n      })\n  }\n}\nexport default UserService\n","import React, { useState } from \"react\";\nimport { Form, Container, Button } from 'react-bootstrap'\nimport UserService from '../../services/UserService'\nimport { Redirect } from 'react-router-dom'\n\nconst logUserIn = (username, password, parent) => {\n  const userService = new UserService(parent)\n  userService.login({ username, password })\n}\n\nconst handleClick = (signup, username, password, parent) => {\n  if (signup) {\n    const userService = new UserService(parent)\n    userService.createUser({ username, password })\n  } else {\n    logUserIn(username, password, parent)\n  }\n}\n// const loginInForm = (username, password, setUsername, setPassword) => (\n\n// )\n\nconst LoginPage = ({ parent, bool }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [signup, setSignup] = useState(false)\n  // debugger\n  if(bool){\n    return <Redirect to=\"/dashboard\" />\n  } else {\n      return (\n        <Container className='d-flex justify-content-center flex-column  h-100'>\n          <div className=\"text-center\">\n            <h1 className='pt-5'>\n              {signup ? \"Create New Account\" : \"Log In\"}\n            </h1>\n          </div>\n          <div className='d-flex flex-row w-100 h-100  flex-fill justify-content-center '>\n            <Form >\n              <Form.Group controlId=\"formGroupEmail\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} />\n              </Form.Group>\n              <Form.Group controlId=\"formGroupPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"Password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\n              </Form.Group>\n            </Form>\n          </div>\n          <div className=\"w-50 d-flex align-self-center justify-content-center\" >\n            <Button size='sm' style={{backgroundColor: '#db3d44', borderColor: '#db3d44'}} onClick={e => handleClick(signup, username, password, parent)} variant=\"primary\">\n              {!signup ? \"Log In!\" : \"Create Account!\"}\n            </Button>\n            <Button size='sm' style={{backgroundColor: '#db3d44', borderColor: '#db3d44'}} onClick={e => setSignup(!signup)} variant=\"primary\" className='ml-5 btn-outline-primaryd'>\n              {!signup ? \"Sign Up!\" : \"Log In!\"}\n            </Button>\n          </div>\n        </Container>\n      )\n    }\n}\n\nexport default LoginPage;\n","import React from 'react'\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\nimport DatePicker from \"react-datepicker\"\n\nimport \"react-datepicker/dist/react-datepicker.css\"\n\n\nexport default class NewProjectModal extends React.Component {\n  state = {\n    show: this.props.show,\n    project: {\n      date: \"\",\n      description: \"\",\n      name: \"\",\n      priority: \"\",\n    }\n  }\n\n  handleName = name => this.setState({ project: { ...this.state.project, name: name } })\n  handleDesc = description => this.setState({ project: { ...this.state.project, description: description } })\n  handleChange = date => this.setState({ project: { ...this.state.project, date: date } })\n  handleSelectChange = priority => this.setState({ project: { ...this.state.project, priority: priority } })\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>Enter New Project Details</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group as={Row} controlId=\"formProName\">\n              <Form.Label column sm=\"2\">\n                <small>Name:</small>\n              </Form.Label>\n              <Col sm=\"10\">\n                <Form.Control onChange={(event) => this.handleName(event.target.value)} value={this.state.project.name} />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formProDesc\">\n              <Form.Label column sm=\"2\">\n                <small>Description:</small>\n              </Form.Label>\n              <Col sm=\"10\">\n                <Form.Control onChange={(event) => this.handleDesc(event.target.value)} value={this.state.project.description} />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formProPriority\">\n              <Col sm='2'>\n                <Form.Label><small>Priority:</small></Form.Label>\n              </Col>\n              <Col sm='10'>\n                <Form.Control as=\"select\" onChange={(event) => this.handleSelectChange(event.target.value)}>\n                  <option value='low'>Low</option>\n                  <option value='medium'>Medium</option>\n                  <option value='high'>High</option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formProDeadline\">\n              <Col sm='2'>\n                <Form.Label>\n                  <small>Deadline:</small>\n                </Form.Label>\n              </Col>\n              <Col sm='10'>\n                <DatePicker\n                  selected={this.state.project.date}\n                  onChange={this.handleChange}\n                />\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button size='sm' variant=\"secondary\" onClick={this.props.handleModalClose}>Close</Button>\n          <Button size='sm' onClick={(event) => this.props.handleProjectSubmit(this.state.project)} variant=\"primary\">Create Project</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n","import React from 'react'\nimport { Card, ListGroup } from 'react-bootstrap'\n\nconst getSpanText = (text, completeTask, task) => {\n  if (text === 'Due Today') {\n    return <span className='flex-fill text-right'>{text}<i onClick={() => completeTask(task.id)} className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: '#d3d3d3', marginLeft: 3 }} /></span>\n  }\n  return <span className='flex-fill text-right'><i style={{ color: \"red\" }}>{text}</i><i onClick={() => completeTask(task.id)} className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: '#d3d3d3', marginLeft: 3 }} /></span>\n}\n\nconst UpcomingTasks = ({ tasks, dateFromState, completeTask }) => {\n  // console.log(dateFromState)\n  // console.log(tasks)\n  let upcomingTasks = tasks.filter(task => new Date(task.deadline).setHours(0, 0, 0, 0).valueOf() <= dateFromState.setHours(0, 0, 0, 0).valueOf())\n  upcomingTasks = upcomingTasks.map(task => {\n    task['spanText'] = new Date(task.deadline).setHours(0, 0, 0, 0).valueOf() === dateFromState.setHours(0, 0, 0, 0).valueOf() ? 'Due Today' : 'Past Due'\n    return task\n  })\n  return (\n    <div>\n      <Card>\n        <Card.Header style={{ backgroundColor: '#0033CC', color: \"#fff\" }}>\n          Upcoming Tasks <i className=\"fa fa-fw fa-caret-up\" style={{ fontSize: '1em', marginLeft: 5 }} />\n        </Card.Header>\n        {upcomingTasks.map(task => {\n          return (\n            <ListGroup.Item className='d-flex' key={`list-group-item-${task.id}`}>\n              {task.title}\n              {getSpanText(task.spanText, completeTask, task)}\n            </ListGroup.Item>)\n        }\n        )}\n        {upcomingTasks.length === 0 ? <h5 style={{marginTop: 5, alignSelf: 'center'}}>No Upcoming Task!</h5> : console.log(upcomingTasks) }\n      </Card>\n    </div>\n  )\n}\n\nexport default UpcomingTasks\n","import React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap'\n\nconst RecentlyCompletedTasks = ({ tasks, completeTask }) => {\n  let todaysDate = new Date()\n  todaysDate.setDate(todaysDate.getDate() - 7)\n  const completed_tasks = tasks.filter(task => task.is_completed && new Date(task.deadline).valueOf() > todaysDate.setHours(0, 0, 0, 0).valueOf()).sort((a, b) => b.id - a.id).slice(0,5)\n  return (\n    <Card style={{ width: '350px', maxWidth: '100%' }}>\n      <Card.Header style={{ backgroundColor: '#669900', color: \"#fff\" }}>\n        Recently Completed Tasks <i className=\"fa fa-fw fa-check-square-o\" style={{ fontSize: '1em', marginLeft: 5 }} />\n      </Card.Header>\n      {\n        completed_tasks.map((task, idx) =>{\n          return <ListGroup.Item key={`task-item-${task.id}`}>\n              <div className='float-left'>\n                {task.title}\n              </div>\n              <div className='float-right'>\n                <i className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: 'green'}} />\n              </div>\n          </ListGroup.Item>\n        })\n      }\n      {completed_tasks.length === 0 ? <h5 style={{marginTop: 5, alignSelf: 'center'}}>No Completed Task!</h5> : console.log(completed_tasks) }\n    </Card>\n  );\n}\n\nexport default RecentlyCompletedTasks;\n","import React from 'react'\nimport { Card, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst prosInRows = (pros) => {\n  const size = 3\n  const arrayOfArrays = []\n  for (var i = 0; i < pros.length; i += size) {\n    arrayOfArrays.push(pros.slice(i, i + size))\n  }\n  return arrayOfArrays\n}\n\nconst renderRows = (projects) => {\n  return prosInRows(projects).map((row, index) => renderRow(row, index))\n}\n\nconst renderRow = (row, index) => (\n  <div className='row mx-auto' key={`row-${index}`} style={{ marginTop: 10 }}>\n    {row.map(project =>\n      <Col key={`project-${project.id}`} sm={4}>\n        <Link to={`/projects/${project.id}`}>\n          <Card key={`project-${project.id}`}>\n            <Card.Header style={{color: '#000000'}}>\n              {project.name}\n            </Card.Header>\n          </Card>\n        </Link>\n      </Col>\n    )}\n  </div>\n)\n\nconst ProjectCardsComponent = ({ projects, openModal }) => {\n  return (\n    <Card className='mb-3'>\n      <Card.Header style={{ backgroundColor: '#0099FF', color: \"#fff\" }}>\n        <div className='float-left'>\n          My Projects <i className=\"fa fa-fw fa-th-large\" style={{ fontSize: '1em', marginLeft: 5 }} />\n        </div>\n        <div className='float-right' onClick={() => openModal()}>\n          <strong>New</strong><i className=\"fa fa-fw fa-plus-square\" style={{ fontSize: '1em', marginLeft: 5 }} />\n        </div>\n      </Card.Header>\n      <Card.Body>\n        {renderRows(projects)}\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default ProjectCardsComponent\n","import React from 'react'\nimport Calendar from 'react-calendar'\nimport NewProjectModal from '../sub-components/NewProjectModal.js'\nimport UpcomingTasks from '../sub-components/UpcomingTasks.js'\nimport RecentlyCompletedTasks from '../sub-components/RecentlyCompletedTasks.js'\nimport ProjectCardsComponent from '../sub-components/ProjectCardsComponent'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nexport default class DashBoard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userId: 1,\n      showNPM: false,\n      date: new Date(),\n      inbox: [],\n      trash: [],\n      upcomingTasks: []\n    }\n  }\n\n  onChange = date => this.setState({ date })\n  openModal = () => this.setState({ showNPM: true })\n  handleModalClose = () => this.setState({ showNPM: false })\n  allTasks = () => this.props.allTasks\n\n  handleProjectSubmit = (obj) => {\n    let newObj = { ...obj, userId: this.props.authProps.loggedInUserId }\n    this.props.projectService.postProject(newObj)\n    this.setState({ showNPM: false })\n  }\n\n  completeTask = (taskId) => this.props.taskService.completeTask(taskId)\n\n  render() {\n    return (\n      <Container fluid>\n        <NewProjectModal handleProjectSubmit={this.handleProjectSubmit} show={this.state.showNPM} handleModalClose={this.handleModalClose} />\n        <Row>\n          <Col sm={3}>\n            <Calendar className='mb-3' onChange={this.onChange} value={this.state.date} />\n          </Col>\n          <Col sm={6}>\n            <ProjectCardsComponent projects={this.props.projects} openModal={this.openModal} />\n            <UpcomingTasks dateFromState={this.state.date} tasks={this.allTasks().filter(task => !task.is_completed)} completeTask={this.completeTask} />\n          </Col>\n          <Col sm={3}>\n            <RecentlyCompletedTasks tasks={this.allTasks()} completeTask={this.completeTask} />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\n// <Accordion defaultActiveKey=\"0\">\n//   <Card style={{ width: '100%', maxWidth: '100%' }}>\n//     <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n//       Inbox <i className=\"fa fa-fw fa-inbox\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//     </Card.Header>\n//     <ListGroup.Item>Inbox !</ListGroup.Item>\n//     <Card.Header style={{ backgroundColor: '#666666', color: '#fff' }}>\n//       <CustomToggle eventkey=\"1\" color='#666666'>\n//         Trash <i className=\"fa fa-fw fa-trash\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//       </CustomToggle>\n//     </Card.Header>\n//     <Accordion.Collapse eventkey=\"1\">\n//       <ListGroup.Item>Trash HERE!</ListGroup.Item>\n//     </Accordion.Collapse>\n//     <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n//       Upcoming Deadlines <i className=\"fa fa-fw fa-hourglass-end\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//     </Card.Header>\n//     <ListGroup.Item>Deadlines 1</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 2</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 3</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 4</ListGroup.Item>\n//   </Card>\n// </Accordion>\n","export default class TagSerivce {\n  constructor(component) {\n    this.component = component\n    this.productionURL = 'https://arcane-sands-50858.herokuapp.com'\n    this.devURL = 'http://localhost:3000'\n  }\n\n  fetchAll(projectId) {\n    fetch(`${this.productionURL}/tags`)\n      .then(response => response.json())\n      .then(tags => this.component.setState({ tags }))\n  }\n}","import React, { useState } from 'react'\nimport { Card, Row, Col, Form } from 'react-bootstrap/'\n\nconst handleSubmit = (isEditing, name, description, projectService, project) => {\n  projectService.updateProject(project.id, { name, description })\n  isEditing(false)\n}\n\nconst ProjectTitleComponent = ({ project, className, projectService }) => {\n  const [editing, isEditing] = useState(false)\n  const [name, setName] = useState(project.name)\n  const [desc, setDesc] = useState(project.desc)\n  return (\n    <Card className={className + ' d-flex'}>\n      <Card.Header style={{ backgroundColor: '#0099FF', color: \"#fff\" }}>\n        <Row>\n          <Col sm={10} className='my-auto' >\n            {editing ? <Form.Control value={name} placeholder={project.name} onChange={(e) => setName(e.target.value)} /> : project.name /* {project.name}<i className=\"fa fa-fw fa-square\" style={{ fontSize: '1em', marginLeft: 5 }} /> */}\n          </Col>\n          <Col sm={2} className='text-right'>\n            <div variant='light' onClick={() => !editing ? isEditing(true) : handleSubmit(isEditing, name, desc, projectService, project)}>\n              <strong>{editing ? 'Done' : 'Edit'}</strong><i className={!editing ? \"fa fa-fw fa-pencil\" : \"fa fa-fw fa-check\"} style={{ fontSize: '1em', marginLeft: 5 }} />\n            </div>\n          </Col>\n        </Row>\n\n      </Card.Header>\n      <Card.Body>\n        {editing ? <Form.Control value={desc} placeholder={project.description} onChange={(e) => setDesc(e.target.value)} /> : project.description}\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default ProjectTitleComponent\n","class NoteService {\n  constructor(component) {\n    this.component = component\n    this.workingURL = 'https://arcane-sands-50858.herokuapp.com'\n    // this.workingURL = 'http://localhost:3000'\n\n  }\n\n  fetchNotesForProject = (projectId) => {\n    fetch(`${this.workingURL}/projects/${projectId}/notes`, {\n      headers: {\n        \"Authorization\": this.component.props.authProps.token\n      }\n    })\n      .then(response => response.json())\n      .then(notes => this.component.setState({ notes }))\n  }\n\n  createNote = (note, projectId) => {\n    fetch(`${this.workingURL}/projects/${projectId}/notes`, {\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify(note),\n      method: 'POST'\n    })\n      .then(response => response.json())\n      .then(note => {\n        this.component.setState({\n          notes: [...this.component.state.notes, note]\n        })\n      })\n  }\n\n  deleteNote = (noteId) => {\n    fetch(`${this.workingURL}/notes/${noteId}`, { //eslint-disable-line \n      method: 'DELETE',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n    })\n      .then(response => response.json())\n      .then(deletedNote => {\n        const notes = this.component.state.notes\n        this.component.setState({\n          notes: notes.filter(note => note.id !== deletedNote.id)\n        })\n      })\n  }\n}\n\nexport default NoteService\n","import React, { Component } from 'react'\nimport { Card, ListGroup } from 'react-bootstrap/'\nimport NoteService from '../../services/NoteService';\nimport { Button, Form, Col, Row } from 'react-bootstrap'\n\nclass NotesCard extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isModalHidden: false,\n      notes: [],\n      text: ''\n    }\n    this.noteService = new NoteService(this)\n  }\n\n  handleSubmit = (note) => {\n    this.noteService.createNote(note, this.props.project.id)\n    this.openOrCloseModal()\n  }\n\n  openOrCloseModal = () => this.setState({ isModalHidden: !this.state.isModalHidden })\n\n  componentDidMount() {\n    this.noteService.fetchNotesForProject(this.props.project.id)\n  }\n\n  renderForm = () => (\n    <Form>\n      <Form.Group as={Row} controlId=\"formProName\" className='text-center'>\n        <Col sm=\"9\">\n          <Form.Control as=\"textarea\" autoFocus={true} onChange={(event) => this.setState({ text: event.target.value })} placeholder=\"Enter text here...\" value={this.state.text} />\n        </Col>\n        <Col sm=\"3\" className='my-auto'>\n          <Button onClick={(event) => this.handleSubmit({ note: { text: this.state.text } })} variant=\"primary\">\n            Add Note\n          </Button>\n        </Col>\n      </Form.Group>\n    </Form>\n  )\n\n  render() {\n    const { className } = this.props\n    return (\n      <Card className={className}>\n        {/* <NotesModal show={this.state.isModalHidden} closeModal={this.openOrCloseModal} handleSubmit={this.handleSubmit} /> */}\n        <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n          Notes <i className=\"fa fa-fw fa-pencil-square-o\" style={{ fontSize: '1em', marginLeft: 5 }} />\n          <div className=\"float-right\" onClick={this.openOrCloseModal}>\n            <strong>{!this.state.isModalHidden ? \"New\" : \"Cancel\"}</strong><i className=\"fa fa-fw fa-plus-square\" style={{ fontSize: '1em', marginLeft: 5 }} />\n          </div>\n        </Card.Header>\n        <Card.Body>\n          {this.state.isModalHidden ? this.renderForm() : null}\n          {this.state.notes.map(note => (\n            <ListGroup.Item className='d-flex' key={`note-item-${note.id}`} style={{ border: '1px solid #d3d3d3' }}>\n              {note.text}\n              <span className='flex-fill text-right' onClick={() => this.noteService.deleteNote(note.id)}>\n                <i className=\"fa fa-fw fa-trash\" style={{ fontSize: \"1.25em\", color: \"darkgray\" }}></i>\n              </span>\n            </ListGroup.Item>\n          ))}\n        </Card.Body>\n      </Card>\n    )\n  }\n\n}\n\nexport default NotesCard\n","import React from 'react'\nimport { Card, ListGroup } from 'react-bootstrap'\n\nexport default class SingleItem extends React.Component {\n  // constructor(props) {\n  //   super();\n  //   // this.state = {\n  //   //   isCompleted: props.is_completed\n  //   // }\n  //   // this.itemService = new ItemService(this)\n  // }\n\n  completeItem = (itemId) => {\n    this.props.itemService.completeItem(itemId, !this.props.item.is_completed, this.props.checklistId)\n  }\n\n  render() {\n    return (\n      <div>\n        <Card.Body key={`checklist-item${this.props.item.id}`}>\n          <ListGroup.Item key={this.props.item.id}>\n            <div className='float-left'>\n              <i onClick={() => this.completeItem(this.props.item.id)} className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: !this.props.item.is_completed ? 'silver' : 'green' }} />\n\n              {this.props.item.text}\n            </div>\n            <div className='float-right'>\n              <i className=\"fa fa-fw fa-trash\" style={{ fontSize: '1.25em', color: 'darkGray' }} onClick={() => this.props.deleteItem(this.props.item.id)} />\n            </div>\n            <br />\n          </ListGroup.Item>\n        </Card.Body>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport SingleItem from './SingleItem.js'\nimport { Form, Row, Col, Button } from 'react-bootstrap'\n\nexport default class Checklist extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showItems: false,\n      addItem: false,\n      text: ''\n    }\n  }\n\n  renderItems = () => {\n    const items = [...this.props.checklist.items]\n    items.sort((a, b) => a.id - b.id)\n    return items.map(item => <SingleItem checklistId={this.props.checklist.id} itemService={this.props.itemService} authProps={this.props.authProps} key={item.id} item={item} deleteItem={this.deleteItem} />)\n  }\n  handleChange = (event) => this.setState({ [event.target.name]: event.target.value })\n\n  handleClick = () => this.setState({ addItem: !this.state.addItem })\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.itemService.createNewItem(this.props.checklist.id, { text: this.state.text })\n    this.setState({ addItem: false, text: '' })\n  }\n\n  deleteItem = (itemId) => {\n    this.props.itemService.deleteItem(itemId, this.props.checklist.id)\n  }\n\n  renderForm = () => {\n    const { title } = this.state\n    return (\n      <Form className='pt-1 pb-1 pl-2' onSubmit={this.handleSubmit}>\n        <Row>\n          <Col sm='7'>\n            <Form.Control placeholder='text' name='text' value={title} onChange={this.handleChange} />\n          </Col>\n          <Col sm='2'>\n            <Button onClick={this.handleSubmit} >\n              Submit\n            </Button>\n          </Col>\n          <Col sm='2'>\n            <Button variant=\"danger\" onClick={() => this.setState({ addItem: false, text: '' })}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n\n  render() {\n    return (\n      <div key={this.props.checklist.id} className='mb-3'>\n        <Card>\n          <Card.Header >\n            <Row>\n              <Col sm={8}>\n                {this.props.checklist.title}\n              </Col>\n              <Col sm={2}>\n                <Button size=\"sm\" onClick={() => this.setState({ showItems: !this.state.showItems })}>Expand</Button>\n\n              </Col>\n              <Col sm={2} className='my-auto pt-1'>\n                <i onClick={event => this.handleClick()} className=\"fa fa-fw fa-plus-square align-self-center\" style={{ fontSize: '1.5em', marginLeft: 5 }} />\n              </Col>\n            </Row>\n\n          </Card.Header>\n          {this.state.addItem ? this.renderForm() : null}\n          {this.state.showItems ? this.renderItems() : null}\n        </Card>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Modal, Form, Row, Col, Button } from 'react-bootstrap'\nimport Checklist from './Checklist.js'\n\nexport default class TaskModal extends React.Component {\n  state = {\n    newList: false,\n    title: ''\n  }\n  handleChange = (event) => this.setState({ [event.target.name]: event.target.value })\n\n  handleClick = () => this.setState({ newList: !this.state.newList })\n\n  handleSubmit = (event) => {\n    this.props.checklistService.createChecklist(this.props.task.id, { title: this.state.title })\n    this.setState({ title: '', newList: false })\n  }\n\n  renderForm = () => {\n    const { title } = this.state\n    return (\n      <Form className='pt-1 pb-4 pl-2'>\n        <Row>\n          <Col sm='7'>\n            <Form.Control placeholder='title' name='title' value={title} onChange={this.handleChange} />\n          </Col>\n          <Col sm='2'>\n            <Button onClick={this.handleSubmit} >\n              Submit\n            </Button>\n          </Col>\n          <Col sm='2'>\n            <Button variant=\"danger\" onClick={() => this.setState({ newList: false })}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <div className='float-left' style={{ color: \"black\" }}>\n            {this.props.task.title}\n          </div>\n          <div className='float-right'>\n            <i onClick={event => this.handleClick()} className=\"fa fa-fw fa-plus-square\" style={{ fontSize: '1.5em', marginLeft: 5 }} />\n            <i onClick={() => this.props.closeModal()} className=\"fa fa-fw fa-times-circle\" style={{ fontSize: '1.5em' }} />\n          </div>\n        </Modal.Header>\n        <Modal.Body>\n          {this.state.newList ? this.renderForm() : null}\n          {this.props.checklists.map(checklist => <Checklist authProps={this.props.authProps} itemService={this.props.itemService} checklist={checklist} key={checklist.id} />)}\n        </Modal.Body>\n      </Modal>\n    )\n  }\n}\n","export default class ChecklistService {\n  constructor(component) {\n    this.component = component\n  }\n\n  fetchChecklists = taskId => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/tasks/${taskId}/checklists`, {\n      headers: {\n        \"Authorization\": this.component.props.authProps.token\n      }\n    })\n      .then(r => r.json())\n      .then(checklists => {\n        this.component.setState({ checklists })\n      })\n  }\n\n  createChecklist = (taskId, checklist) => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/tasks/${taskId}/checklists`, { //eslint-disable-line \n      method: 'POST',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        checklist\n      })\n    })\n      .then(response => response.json())\n      .then(checklist => {\n        this.component.setState({\n          checklists: [...this.component.state.checklists, checklist]\n        })\n      })\n  }\n\n}\n","export default class ItemService {\n  constructor(component) {\n    this.component = component\n  }\n\n  createNewItem = (checklistId, item) => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/checklists/${checklistId}/items`, { //eslint-disable-line \n      method: 'POST',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        item\n      })\n    })\n      .then(response => response.json())\n      .then(newItem => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId)\n        const newChecklist = Object.assign({}, oldChecklist)\n        newChecklist.items = [...newChecklist.items, newItem]\n        this.component.updateChecklistsWith(newChecklist)\n      })\n  }\n\n  completeItem = (itemId, bool, checklistId) => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/items/${itemId}`, {\n      method: 'PATCH',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify({\n        item: {\n          is_completed: bool\n        }\n      })\n    })\n      .then(r => r.json())\n      .then(editedItem => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId)\n        const newChecklist = Object.assign({}, oldChecklist)\n        newChecklist.items = newChecklist.items.map(item => editedItem.id === item.id ? editedItem : item)\n        this.component.updateChecklistsWith(newChecklist)\n      })\n  }\n\n  deleteItem = (itemId, checklistId) => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/items/${itemId}`, {\n      method: 'DELETE',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(r => r.json())\n      .then(item => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId)\n        const newChecklist = Object.assign({}, oldChecklist)\n        newChecklist.items = newChecklist.items.filter(oldItem => oldItem.id !== item.id)\n        this.component.setState({\n          checklists: this.component.state.checklists.map(list => list.id === newChecklist.id ? newChecklist : list)\n        })\n      })\n  }\n\n}\n","import React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap'\nimport TaskModal from './TaskModal.js'\nimport ChecklistService from '../../services/ChecklistService.js'\nimport ItemService from '../../services/ItemService.js';\n\n\nclass AllTasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalHidden: true,\n      task: { id: 1 },\n      checklists: [],\n    }\n    this.ChecklistService = new ChecklistService(this)\n    this.itemService = new ItemService(this)\n  }\n\n  closeModal = () => this.setState({ isModalHidden: true })\n\n  updateChecklistsWith = (checklist) => {\n    this.setState({\n      checklists: this.state.checklists.map(list => list.id === checklist.id ? checklist : list)\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState !== this.state) return true\n    return false\n  }\n\n  openModal = (task) => {\n    this.ChecklistService.fetchChecklists(task.id)\n    this.setState({ isModalHidden: false, task: task })\n  }\n\n  render() {\n    const { title, tasks, openModal, style, completeTask } = this.props\n    return (\n      <Card className='mb-2' >\n        <TaskModal itemService={this.itemService} checklistService={this.ChecklistService} authProps={this.props.authProps} task={this.state.task} show={!this.state.isModalHidden} checklists={this.state.checklists} closeModal={this.closeModal} />\n        <Card.Header style={style}>\n          <div className=\"float-left\">\n            {title} <i className=\"fa fa-fw fa-th\" style={{ fontSize: '1em', marginLeft: 5 }} />\n          </div>\n          {title !== \"Completed Tasks\" ?\n            <div className=\"float-right\" onClick={openModal}>\n              <strong>New</strong><i className=\"fa fa-fw fa-plus-square\" style={{ fontSize: '1em', marginLeft: 5 }} />\n            </div>\n            : null\n          }\n        </Card.Header>\n        <Card.Body>\n          {\n            tasks.map(task =>\n              <div key={`task-item${task.id}`}>\n                <ListGroup.Item key={`task-item-${task.id}`} className='d-flex' >\n                  <span className='flex-grow-1' onClick={() => this.openModal(task)}>\n                    {task.title}\n                  </span>\n                  <span>\n                    {title === \"Upcoming Tasks\" ? <i onClick={() => completeTask(task.id)} className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: '#d3d3d3', marginLeft: 3 }} /> : null}\n                    {/* {title === \"All Tasks\" ? <i onClick={() => completeTask(task.id)} className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: `${task.is_completed ? 'green' : '#d3d3d3'}`, marginLeft: 3 }} /> : null} */}\n\n                  </span>\n                </ListGroup.Item>\n              </div>\n            )\n          }\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nexport default AllTasks;\n\n// style={{ width: '850px' }}\n","import React from 'react'\nimport { Modal, Button, Form, Col, Row } from 'react-bootstrap'\nimport DatePicker from \"react-datepicker\"\n\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nexport default class NewTaskModal extends React.Component {\n  state = {\n    date: new Date(),\n    task: {\n      deadline: \"\",\n      title: \"\",\n      projectId: this.props.project ? this.props.project.id : 1,\n    }\n  }\n\n  handleTitle = name => this.setState({ task: { ...this.state.task, title: name } })\n  handleProjectSelect = projectId => this.setState({ task: { ...this.state.task, projectId: projectId } })\n  handleChange = date => {\n    this.setState({ date: date })\n  }\n  handleSelectChange = priority => this.setState({ task: { ...this.state.task, priority: priority } })\n  handleSubmit = () => {\n    const newTask = { ...this.state.task }\n    newTask.deadline = this.state.date.toUTCString()\n    this.props.handleTaskSubmit(newTask)\n    this.setState({\n      task: {\n        deadline: \"\",\n        title: \"\",\n        projectId: this.props.project ? this.props.project.id : 1,\n      }\n    }, () => this.props.closeModal())\n  }\n  renderSelect = () => (\n    <Form.Control as=\"select\" onChange={(event) => this.handleProjectSelect(event.target.value)} defaultValue={this.state.task.projectId}>\n      {this.props.projects.map(project => <option key={project.id} value={project.id}>{project.name}</option>)}\n    </Form.Control>\n  )\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>New Task Form</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group as={Row} controlId=\"formProName\">\n              <Form.Label column sm=\"2\">\n                <small>Title:</small>\n              </Form.Label>\n              <Col sm=\"10\">\n                <Form.Control onChange={(event) => this.handleTitle(event.target.value)} defaultValue={this.state.task.title} />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formProDesc\">\n              <Form.Label column sm=\"2\">\n                <small>Description:</small>\n              </Form.Label>\n              <Col sm=\"10\">\n                {this.props.projects ? this.renderSelect() : this.props.project.name}\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formProDeadline\">\n              <Col sm='2'>\n                <Form.Label>\n                  <small>Deadline:</small>\n                </Form.Label>\n              </Col>\n              <Col sm='10'>\n                <DatePicker\n                  selected={this.state.date}\n                  onChange={this.handleChange}\n                />\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button size='sm' variant=\"secondary\" onClick={this.props.closeModal}>Close</Button>\n          <Button size='sm' onClick={(event) => this.handleSubmit()} variant=\"primary\">Create New Task</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n","import React from 'react';\nimport { Container, Col, Row } from 'react-bootstrap/';\nimport TagSerivce from '../../services/TagService';\nimport ProjectTitleComponent from '../sub-components/ProjectTitleComponent';\nimport NotesCard from '../sub-components/NotesCard';\nimport AllTasks from '../sub-components/AllTasks'\nimport NewTaskModal from '../sub-components/NewTaskModal.js'\n\nexport default class Projects extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tags: [],\n      showNTM: false\n    }\n    this.tagService = new TagSerivce(this)\n  }\n\n  openOrCloseModal = () => this.setState({ showNTM: !this.state.showNTM })\n\n  completeTask = (taskId) => {\n    this.props.taskService.completeTask(taskId)\n  }\n\n  render() {\n    console.log(this.props)\n    const { project } = this.props\n    if (!project) return null\n    const tasks = project.tasks.filter(task => !task.is_completed)\n    const completedTasks = project.tasks.filter(task => task.is_completed)\n    return (\n      <Container fluid>\n        <NewTaskModal show={this.state.showNTM} closeModal={this.openOrCloseModal} project={this.props.project} handleTaskSubmit={this.props.handleTaskSubmit} />\n        <Row className='w-100'>\n          <Col sm={7}>\n            <ProjectTitleComponent projectService={this.props.projectService} project={project} className='mb-3' />\n            <NotesCard authProps={this.props.authProps} className='mb-3' project={project} openModal={this.openOrCloseModal} />\n          </Col>\n          <Col sm={5}>\n            {/* need to send in checklist service and item service from app.js  */}\n            <AllTasks key={`length-of-tasks-${tasks.length}`} completeTask={this.completeTask} authProps={this.props.authProps} title='Upcoming Tasks' tasks={tasks} style={{ backgroundColor: '#4d1411', color: \"#fff\" }} openModal={this.openOrCloseModal} />\n            <AllTasks key={`length-of-completedTasks-${completedTasks.length}`} authProps={this.props.authProps} title='Completed Tasks' tasks={completedTasks} style={{ backgroundColor: '#669900', color: \"#fff\" }} />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n","export default class ProjectService {\n  constructor(component) {\n    this.component = component\n    this.productionURL = 'https://arcane-sands-50858.herokuapp.com'\n    this.devURL = 'http://localhost:3000'\n  }\n\n  fetchProjects = (userId) => {\n    fetch(`${this.productionURL}/users/${userId}/projects`, {\n      headers: {\n        \"Authorization\": this.component.props.authProps.token\n      }\n    }).then(response => {\n      if (response.status > 199 && response.status < 300) return response.json()\n      throw response.statusText\n    }).then(projects => {\n      const allTasks = projects.map(project => project.tasks).flat()\n      this.component.setState({ projects, allTasks })\n    }).catch(reason => console.log(reason))\n  }\n\n  postProject = (project) => {\n    fetch(`${this.productionURL}/users/${project.userId}/projects`, {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify(project)\n    })\n      .then(r => r.json())\n      .then(newProject => this.component.setState({ projects: [...this.component.state.projects, newProject] }))\n  }\n\n  postTask = (task) => {\n    fetch(`${this.productionURL}/projects/${task.projectId}/tasks`, {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify(task)\n    })\n      .then(r => r.json())\n      .then(newTask => {\n        const project = this.component.state.projects.find(project => project.id === newTask.project_id)\n        const projectCopy = Object.assign({}, project)\n        projectCopy.tasks = [...projectCopy.tasks, newTask]\n        const newProjects = this.component.state.projects.map(project => project.id === projectCopy.id ? projectCopy : project)\n        this.component.setState({\n          projects: newProjects,\n          allTasks: newProjects.map(project => project.tasks).flat(),\n        })\n      })\n  }\n\n  updateProject = (id, project) => {\n    fetch(`${this.productionURL}/projects/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify({ project })\n    })\n      .then(r => r.json())\n      .then(updatedProject =>\n        this.component.setState({\n          projects: this.component.state.projects.map(proj => proj.id === updatedProject.id ? updatedProject : proj)\n        }))\n  }\n}\n","class TaskService {\n  constructor(component) {\n    this.component = component\n    this.workingURL = 'https://arcane-sands-50858.herokuapp.com'\n    // this.workingURL = 'http://localhost:3000'\n  }\n\n  fetchAllTasksFor = (projectId) => {\n    fetch(`${this.workingURL}/projects/${projectId}/tasks`, {\n      headers: {\n        \"Authorization\": this.component.props.authProps.token\n      }\n    })\n      .then(response => response.json())\n      .then(tasks => this.component.setState({ tasks }))\n  }\n\n  completeTask = (taskId) => {\n    fetch(`${this.workingURL}/tasks/${taskId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify({\n        task: {\n          is_completed: true\n        }\n      })\n    })\n      .then(r => r.json())\n      .then(editedTask => {\n        const project = this.component.state.projects.find(project => project.id === editedTask.project_id)\n        const projectCopy = Object.assign({}, project)\n        projectCopy.tasks = projectCopy.tasks.map(task => task.id === editedTask.id ? editedTask : task)\n        const newProjects = this.component.state.projects.map(project => project.id === projectCopy.id ? projectCopy : project)\n        this.component.setState({\n          projects: newProjects,\n          allTasks: newProjects.map(project => project.tasks).flat()\n        })\n      })\n  }\n}\n\nexport default TaskService\n","import React, { Component } from 'react';\nimport ProjectService from '../../services/ProjectService.js'\nimport TaskService from '../../services/TaskService.js'\nimport DashBoard from './DashBoard'\nimport Projects from './Projects'\n\nexport class MainViewRenderProps extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      token: null,\n      loggedInUserId: null,\n      projects: [],\n      allTasks: [],\n    }\n    this.projectService = new ProjectService(this)\n    this.taskService = new TaskService(this)\n  }\n\n  componentDidMount() {\n    this.projectService.fetchProjects(this.props.authProps.loggedInUserId)\n  }\n\n  findProjectWith = (id) => this.state.projects.find(project => project.id === parseInt(id))\n\n  handleTaskSubmit = obj => this.projectService.postTask(obj)\n\n  render() {\n    switch (this.props.children) {\n      case DashBoard:\n        return <this.props.children allTasks={this.state.allTasks} projects={this.state.projects} projectService={this.projectService} taskService={this.taskService} authProps={this.props.authProps} />\n      case Projects:\n        return <this.props.children projectService={this.projectService} taskService={this.taskService} project={this.findProjectWith(this.props.id)} authProps={this.props.authProps} handleTaskSubmit={this.handleTaskSubmit} />\n      default:\n        return <this.props.children tasks={this.state.allTasks} taskService={this.taskService} projects={this.state.projects} handleTaskSubmit={this.handleTaskSubmit} authProps={this.props.authProps} />\n    }\n  }\n}\n\nexport default MainViewRenderProps;\n\n{/* <DashBoard projectService={this.projectService} taskService={this.taskService} projects={this.state.projects} authProps={this.authProps()} /> */ }\n{/* <Projects project={this.findProjectWith(useParams().id)} handleTaskSubmit={this.handleTaskSubmit} authProps={this.authProps()} /> */ }\n{/* <Tasks tasks={this.state.allTasks} projects={this.state.projects} handleTaskSubmit={this.handleTaskSubmit} authProps={this.authProps()} /> */ }","import React, { Component } from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport SideNavPage from './components/sub-components/SideNav.js';\nimport LoginPage from './components/main-components/LoginPage';\nimport DashBoard from './components/main-components/DashBoard.js'\nimport Projects from './components/main-components/Projects.js'\nimport { Route, useParams, Switch } from 'react-router-dom'\nimport './App.css';\nimport { MainViewRenderProps } from './components/main-components/MainViewRenderProps.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      token: null,\n      loggedInUserId: null,\n      projects: []\n    }\n  }\n\n  authProps = () => ({ token: this.state.token, loggedInUserId: this.state.loggedInUserId })\n\n  componentDidMount() {\n    this.setState({\n      token: localStorage.token,\n      loggedInUserId: localStorage.userId\n    }, this.fetchForFirstProjectId)\n  }\n\n  logout = () => {\n    localStorage.clear()\n    this.setState({\n      token: null,\n      loggedInUserId: null\n    })\n  }\n\n  fetchForFirstProjectId = () => {\n      fetch(`https://arcane-sands-50858.herokuapp.com/users/${this.state.loggedInUserId}/projects`, {\n        headers: {\n          \"Authorization\": this.state.token\n        }\n      }).then(response => {\n        if (response.status > 199 && response.status < 300) return response.json()\n        throw response.statusText\n      }).then(projects => {\n        this.setState({ projects })\n      }).catch(reason => console.log(reason))\n  }\n\n  showSideNavWithMain = ({ location, history }) => (\n    <SideNavPage location={location} firstProjectId={this.state.projects[0].id} history={history}>\n      <main style={{ marginLeft: 75, marginTop: 25 }}>\n        <Switch>\n          <Route path=\"/dashboard\" exact component={props => <MainViewRenderProps children={DashBoard} authProps={this.authProps()} />} />\n          <Route path=\"/projects/:id\" component={props => <MainViewRenderProps children={Projects} id={useParams().id} authProps={this.authProps()} />} />\n          {/* <Route path=\"/tasks\" component={props => <MainViewRenderProps children={Tasks} authProps={this.authProps()} />} /> */}\n        </Switch>\n      </main>\n    </SideNavPage>\n  )\n\n  render() {\n    return <>\n      <Navbar variant=\"dark\" style={{ backgroundColor: '#db3d44' }}>\n        <Navbar.Brand href=\"#home\">\n          <i className=\"fa fa-fw fa-check-square-o\" style={{ fontSize: '1em', marginLeft: 60 }} />\n          <span className='ml-2'>ToDo App</span>\n        </Navbar.Brand>\n        {this.state.token ?\n          <Navbar.Collapse className=\"justify-content-end\" onClick={() => this.logout()} style={{color: '#fff'}}>\n             <strong>Logout</strong><i className=\"fa fa-fw fa-sign-out\" style={{ fontSize: '1em', marginLeft: 5 }} />\n          </Navbar.Collapse>\n          : null\n        }\n\n      </Navbar>\n      {this.state.token ? this.showSideNavWithMain(this.props) : <LoginPage parent={this} />}\n    </>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n\nReactDOM.render(<Router>\n  <Route render={({ location, history }) => (<App location={location} history={history} />)} /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}