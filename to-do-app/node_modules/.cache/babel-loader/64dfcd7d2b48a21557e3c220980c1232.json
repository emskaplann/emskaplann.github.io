{"ast":null,"code":"var _jsxFileName = \"/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/sub-components/SideNav.js\";\nimport React from 'react';\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport DashBoard from '../main-components/DashBoard.js';\nimport Projects from '../main-components/Projects.js';\nimport Tasks from '../main-components/Tasks.js';\nimport { BrowserRouter as Router, Route, useParams } from 'react-router-dom';\nimport ProjectService from '../../services/ProjectService.js';\nimport TaskService from '../../services/TaskService.js';\nexport default class SideNavPage extends React.Component {\n  constructor() {\n    super();\n\n    this.handleTaskSubmit = obj => this.projectService.postTask(obj);\n\n    this.isActive = (location, pathName) => location.pathname.includes(pathName) ? true : false;\n\n    this.state = {\n      projects: [],\n      allTasks: []\n    };\n    this.projectService = new ProjectService(this);\n    this.taskService = new TaskService(this);\n  }\n\n  componentDidMount() {\n    this.projectService.fetchProjects(1);\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Route, {\n      render: ({\n        location,\n        history\n      }) => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(SideNav, {\n        style: {\n          position: 'fixed'\n        },\n        onSelect: selected => {\n          const to = '/' + selected;\n\n          if (location.pathname !== to) {\n            history.push(to);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(SideNav.Toggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(SideNav.Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        eventKey: \"dashboard\",\n        active: this.isActive(location, '/dashboard'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(NavIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-fw fa-home\",\n        style: {\n          fontSize: '1.75em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(NavText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"DashBoard\")), React.createElement(NavItem, {\n        eventKey: \"projects/1\",\n        active: this.isActive(location, '/projects'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(NavIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-fw fa-list-alt\",\n        style: {\n          fontSize: '1.75em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(NavText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Projects\")), React.createElement(NavItem, {\n        eventKey: \"tasks\",\n        active: this.isActive(location, '/tasks'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(NavIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-fw fa-tasks\",\n        style: {\n          fontSize: '1.75em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(NavText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Tasks\")))), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/dashboard\",\n        exact: true,\n        component: props => React.createElement(DashBoard, {\n          taskService: this.taskService,\n          projects: this.state.projects,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/projects/:id\",\n        component: props => React.createElement(Projects, {\n          project: this.state.projects.find(project => project.id === parseInt(useParams().id)),\n          handleTaskSubmit: this.handleTaskSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/tasks\",\n        component: props => React.createElement(Tasks, {\n          tasks: this.state.allTasks,\n          projects: this.state.projects,\n          handleTaskSubmit: this.handleTaskSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/sub-components/SideNav.js"],"names":["React","SideNav","Toggle","Nav","NavItem","NavIcon","NavText","DashBoard","Projects","Tasks","BrowserRouter","Router","Route","useParams","ProjectService","TaskService","SideNavPage","Component","constructor","handleTaskSubmit","obj","projectService","postTask","isActive","location","pathName","pathname","includes","state","projects","allTasks","taskService","componentDidMount","fetchProjects","render","history","position","selected","to","push","fontSize","props","find","project","id","parseInt"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav'\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css'\nimport DashBoard from '../main-components/DashBoard.js'\nimport Projects from '../main-components/Projects.js'\nimport Tasks from '../main-components/Tasks.js'\nimport { BrowserRouter as Router, Route, useParams } from 'react-router-dom'\nimport ProjectService from '../../services/ProjectService.js'\nimport TaskService from '../../services/TaskService.js'\n\n\nexport default class SideNavPage extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      projects: [],\n      allTasks: [],\n    }\n    this.projectService = new ProjectService(this)\n    this.taskService = new TaskService(this)\n  }\n\n  componentDidMount() {\n    this.projectService.fetchProjects(1)\n  }\n\n  handleTaskSubmit = obj => this.projectService.postTask(obj)\n  isActive = (location, pathName) => location.pathname.includes(pathName) ? true : false\n\n  render() {\n    return (\n      <Router>\n        <Route render={({ location, history }) => (\n          <React.Fragment>\n            <SideNav\n              style={{ position: 'fixed' }}\n              onSelect={(selected) => {\n                const to = '/' + selected\n                if (location.pathname !== to) {\n                  history.push(to)\n                }\n              }}\n            >\n              <SideNav.Toggle />\n              <SideNav.Nav >\n                <NavItem eventKey=\"dashboard\" active={this.isActive(location, '/dashboard')}>\n                  <NavIcon >\n                    <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\n                  </NavIcon>\n                  <NavText>\n                    DashBoard\n                  </NavText>\n                </NavItem>\n                <NavItem eventKey=\"projects/1\" active={this.isActive(location, '/projects')}>\n                  <NavIcon>\n                    <i className=\"fa fa-fw fa-list-alt\" style={{ fontSize: '1.75em' }} />\n                  </NavIcon>\n                  <NavText>\n                    Projects\n                  </NavText>\n                </NavItem>\n                <NavItem eventKey=\"tasks\" active={this.isActive(location, '/tasks')}>\n                  <NavIcon>\n                    <i className=\"fa fa-fw fa-tasks\" style={{ fontSize: '1.75em' }} />\n                  </NavIcon>\n                  <NavText>\n                    Tasks\n                  </NavText>\n                </NavItem>\n              </SideNav.Nav>\n            </SideNav>\n            <main>\n              <Route path=\"/dashboard\" exact component={props => <DashBoard taskService={this.taskService} projects={this.state.projects} />} />\n              <Route path=\"/projects/:id\" component={props => <Projects project={this.state.projects.find(project => project.id === parseInt(useParams().id))} handleTaskSubmit={this.handleTaskSubmit} />} />\n              <Route path=\"/tasks\" component={props => <Tasks tasks={this.state.allTasks} projects={this.state.projects} handleTaskSubmit={this.handleTaskSubmit} />} />\n            </main>\n          </React.Fragment>\n        )}\n        />\n      </Router>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}