{"ast":null,"code":"import React from'react';import{Card,ListGroup}from'react-bootstrap';var RecentlyCompletedTasks=function RecentlyCompletedTasks(_ref){var tasks=_ref.tasks,completeTask=_ref.completeTask;var todaysDate=new Date();todaysDate.setDate(todaysDate.getDate()-7);var completed_tasks=tasks.filter(function(task){return task.is_completed&&new Date(task.deadline).valueOf()>todaysDate.setHours(0,0,0,0).valueOf();}).sort(function(a,b){return b.id-a.id;}).slice(0,5);return React.createElement(Card,{style:{width:'350px',maxWidth:'100%'}},React.createElement(Card.Header,{style:{backgroundColor:'#669900',color:\"#fff\"}},\"Recently Completed Tasks \",React.createElement(\"i\",{className:\"fa fa-fw fa-check-square-o\",style:{fontSize:'1em',marginLeft:5}})),completed_tasks.map(function(task,idx){return React.createElement(ListGroup.Item,{key:\"task-item-\".concat(task.id)},React.createElement(\"div\",{className:\"float-left\"},task.title),React.createElement(\"div\",{className:\"float-right\"},React.createElement(\"i\",{className:\"fa fa-fw fa-check\",style:{fontSize:'1.5em',color:'green'}})));}),completed_tasks.length===0?React.createElement(\"h5\",{style:{marginTop:5,alignSelf:'center'}},\"No Completed Task!\"):console.log(completed_tasks));};export default RecentlyCompletedTasks;","map":{"version":3,"sources":["/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/src/components/sub-components/RecentlyCompletedTasks.js"],"names":["React","Card","ListGroup","RecentlyCompletedTasks","tasks","completeTask","todaysDate","Date","setDate","getDate","completed_tasks","filter","task","is_completed","deadline","valueOf","setHours","sort","a","b","id","slice","width","maxWidth","backgroundColor","color","fontSize","marginLeft","map","idx","title","length","marginTop","alignSelf","console","log"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,SAAf,KAAgC,iBAAhC,CAEA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,MAA6B,IAA1BC,CAAAA,KAA0B,MAA1BA,KAA0B,CAAnBC,YAAmB,MAAnBA,YAAmB,CAC1D,GAAIC,CAAAA,UAAU,CAAG,GAAIC,CAAAA,IAAJ,EAAjB,CACAD,UAAU,CAACE,OAAX,CAAmBF,UAAU,CAACG,OAAX,GAAuB,CAA1C,EACA,GAAMC,CAAAA,eAAe,CAAGN,KAAK,CAACO,MAAN,CAAa,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,YAAL,EAAqB,GAAIN,CAAAA,IAAJ,CAASK,IAAI,CAACE,QAAd,EAAwBC,OAAxB,GAAoCT,UAAU,CAACU,QAAX,CAAoB,CAApB,CAAuB,CAAvB,CAA0B,CAA1B,CAA6B,CAA7B,EAAgCD,OAAhC,EAA7D,EAAjB,EAAyHE,IAAzH,CAA8H,SAACC,CAAD,CAAIC,CAAJ,QAAUA,CAAAA,CAAC,CAACC,EAAF,CAAOF,CAAC,CAACE,EAAnB,EAA9H,EAAqJC,KAArJ,CAA2J,CAA3J,CAA6J,CAA7J,CAAxB,CACA,MACE,qBAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAkBC,QAAQ,CAAE,MAA5B,CAAb,EACE,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,KAAK,CAAE,MAArC,CAApB,8BAC2B,yBAAG,SAAS,CAAC,4BAAb,CAA0C,KAAK,CAAE,CAAEC,QAAQ,CAAE,KAAZ,CAAmBC,UAAU,CAAE,CAA/B,CAAjD,EAD3B,CADF,CAKIjB,eAAe,CAACkB,GAAhB,CAAoB,SAAChB,IAAD,CAAOiB,GAAP,CAAc,CAChC,MAAO,qBAAC,SAAD,CAAW,IAAX,EAAgB,GAAG,qBAAejB,IAAI,CAACQ,EAApB,CAAnB,EACH,2BAAK,SAAS,CAAC,YAAf,EACGR,IAAI,CAACkB,KADR,CADG,CAIH,2BAAK,SAAS,CAAC,aAAf,EACE,yBAAG,SAAS,CAAC,mBAAb,CAAiC,KAAK,CAAE,CAAEJ,QAAQ,CAAE,OAAZ,CAAqBD,KAAK,CAAE,OAA5B,CAAxC,EADF,CAJG,CAAP,CAQD,CATD,CALJ,CAgBGf,eAAe,CAACqB,MAAhB,GAA2B,CAA3B,CAA+B,0BAAI,KAAK,CAAE,CAACC,SAAS,CAAE,CAAZ,CAAeC,SAAS,CAAE,QAA1B,CAAX,uBAA/B,CAAyGC,OAAO,CAACC,GAAR,CAAYzB,eAAZ,CAhB5G,CADF,CAoBD,CAxBD,CA0BA,cAAeP,CAAAA,sBAAf","sourcesContent":["import React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap'\n\nconst RecentlyCompletedTasks = ({ tasks, completeTask }) => {\n  let todaysDate = new Date()\n  todaysDate.setDate(todaysDate.getDate() - 7)\n  const completed_tasks = tasks.filter(task => task.is_completed && new Date(task.deadline).valueOf() > todaysDate.setHours(0, 0, 0, 0).valueOf()).sort((a, b) => b.id - a.id).slice(0,5)\n  return (\n    <Card style={{ width: '350px', maxWidth: '100%' }}>\n      <Card.Header style={{ backgroundColor: '#669900', color: \"#fff\" }}>\n        Recently Completed Tasks <i className=\"fa fa-fw fa-check-square-o\" style={{ fontSize: '1em', marginLeft: 5 }} />\n      </Card.Header>\n      {\n        completed_tasks.map((task, idx) =>{\n          return <ListGroup.Item key={`task-item-${task.id}`}>\n              <div className='float-left'>\n                {task.title}\n              </div>\n              <div className='float-right'>\n                <i className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: 'green'}} />\n              </div>\n          </ListGroup.Item>\n        })\n      }\n      {completed_tasks.length === 0 ? <h5 style={{marginTop: 5, alignSelf: 'center'}}>No Completed Task!</h5> : console.log(completed_tasks) }\n    </Card>\n  );\n}\n\nexport default RecentlyCompletedTasks;\n"]},"metadata":{},"sourceType":"module"}