{"ast":null,"code":"import _defineProperty from \"/Users/emskaplann/final_projects/04-module/to-do-app-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/main-components/DashBoard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Container, Accordion, Row, Col, Card, ListGroup, useAccordionToggle } from 'react-bootstrap';\nimport Calendar from 'react-calendar';\nimport NewProjectModal from '../sub-components/NewProjectModal.js';\nimport UpcomingTasks from '../sub-components/UpcomingTasks.js';\nimport RecentlyCompletedTasks from '../sub-components/RecentlyCompletedTasks.js';\nimport { Link } from 'react-router-dom';\nimport TaskService from '../../services/TaskService.js';\n\nfunction CustomToggle({\n  children,\n  eventKey,\n  color\n}) {\n  const changeContent = useAccordionToggle(eventKey, () => console.log('works!'));\n  return React.createElement(\"button\", {\n    type: \"button\",\n    style: {\n      backgroundColor: color,\n      color: '#fff',\n      border: 0\n    },\n    onClick: changeContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, children);\n}\n\nexport default class DashBoard extends React.Component {\n  constructor() {\n    super();\n\n    this.onChange = date => this.setState({\n      date\n    });\n\n    this.openModal = () => this.setState({\n      showNPM: true\n    });\n\n    this.handleModalClose = () => this.setState({\n      showNPM: false\n    });\n\n    this.allTasks = () => this.props.projects.map(project => project.tasks).flat();\n\n    this.prosInRows = pros => {\n      const size = 3;\n      const arrayOfArrays = [];\n\n      for (var i = 0; i < pros.length; i += size) {\n        arrayOfArrays.push(pros.slice(i, i + size));\n      }\n\n      return arrayOfArrays;\n    };\n\n    this.renderRows = () => {\n      return this.prosInRows(this.props.projects).map((row, index) => this.renderRow(row, index));\n    };\n\n    this.renderRow = (row, index) => React.createElement(\"div\", {\n      className: \"row mx-auto\",\n      key: \"row-\".concat(index),\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, row.map(project => React.createElement(Col, {\n      key: \"project-\".concat(project.id),\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/projects/\".concat(project.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Card, {\n      key: \"project-\".concat(project.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, project.name), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, project.description))))));\n\n    this.handleProjectSubmit = obj => {\n      let newObj = _objectSpread({}, obj, {\n        userId: this.state.userId,\n        isDeleted: false,\n        isCompleted: false\n      });\n\n      this.setState({\n        showNPM: false\n      }, this.projectService.postProject(newObj));\n    };\n\n    this.completeTask = taskId => this.taskService.completeTask(taskId);\n\n    this.state = {\n      userId: 1,\n      showNPM: false,\n      date: new Date(),\n      projects: [],\n      inbox: [],\n      trash: [],\n      upcomingTasks: []\n    };\n    this.taskService = new TaskService(this);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(NewProjectModal, {\n      handleProjectSubmit: this.handleProjectSubmit,\n      show: this.state.showNPM,\n      handleModalClose: this.handleModalClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Calendar, {\n      onChange: this.onChange,\n      value: this.state.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(RecentlyCompletedTasks, {\n      tasks: this.allTasks(),\n      completeTask: this.completeTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '850px',\n        maxWidth: '100%',\n        marginTop: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        backgroundColor: '#0099FF',\n        color: \"#fff\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"My Projects \", React.createElement(\"i\", {\n      className: \"fa fa-fw fa-th-large\",\n      style: {\n        fontSize: '1em',\n        marginLeft: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"float-right\",\n      onClick: () => this.openModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"New\"), React.createElement(\"i\", {\n      className: \"fa fa-fw fa-plus-square\",\n      style: {\n        fontSize: '1em',\n        marginLeft: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.renderRows())), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(UpcomingTasks, {\n      dateFromState: this.state.date,\n      tasks: this.allTasks().filter(task => !task.is_completed),\n      completeTask: this.completeTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%',\n        maxWidth: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        backgroundColor: '#990033',\n        color: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Inbox \", React.createElement(\"i\", {\n      className: \"fa fa-fw fa-inbox\",\n      style: {\n        fontSize: '1em',\n        marginLeft: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Inbox !\"), React.createElement(Card.Header, {\n      style: {\n        backgroundColor: '#666666',\n        color: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(CustomToggle, {\n      eventkey: \"1\",\n      color: \"#666666\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Trash \", React.createElement(\"i\", {\n      className: \"fa fa-fw fa-trash\",\n      style: {\n        fontSize: '1em',\n        marginLeft: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }))), React.createElement(Accordion.Collapse, {\n      eventkey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Trash HERE!\")), React.createElement(Card.Header, {\n      style: {\n        backgroundColor: '#990033',\n        color: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Upcoming Deadlines \", React.createElement(\"i\", {\n      className: \"fa fa-fw fa-hourglass-end\",\n      style: {\n        fontSize: '1em',\n        marginLeft: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Deadlines 1\"), React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Deadlines 2\"), React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Deadlines 3\"), React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Deadlines 4\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/main-components/DashBoard.js"],"names":["React","Container","Accordion","Row","Col","Card","ListGroup","useAccordionToggle","Calendar","NewProjectModal","UpcomingTasks","RecentlyCompletedTasks","Link","TaskService","CustomToggle","children","eventKey","color","changeContent","console","log","backgroundColor","border","DashBoard","Component","constructor","onChange","date","setState","openModal","showNPM","handleModalClose","allTasks","props","projects","map","project","tasks","flat","prosInRows","pros","size","arrayOfArrays","i","length","push","slice","renderRows","row","index","renderRow","marginTop","id","name","description","handleProjectSubmit","obj","newObj","userId","state","isDeleted","isCompleted","projectService","postProject","completeTask","taskId","taskService","Date","inbox","trash","upcomingTasks","render","width","maxWidth","fontSize","marginLeft","filter","task","is_completed"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Container, Accordion, Row, Col, Card, ListGroup, useAccordionToggle } from 'react-bootstrap'\nimport Calendar from 'react-calendar'\nimport NewProjectModal from '../sub-components/NewProjectModal.js'\nimport UpcomingTasks from '../sub-components/UpcomingTasks.js';\nimport RecentlyCompletedTasks from '../sub-components/RecentlyCompletedTasks.js';\nimport { Link } from 'react-router-dom'\nimport TaskService from '../../services/TaskService.js'\n\n\nfunction CustomToggle({ children, eventKey, color }) {\n  const changeContent = useAccordionToggle(eventKey, () =>\n    console.log('works!'),\n  )\n\n  return (\n    <button\n      type=\"button\"\n      style={{ backgroundColor: color, color: '#fff', border: 0 }}\n      onClick={changeContent}\n    >\n      {children}\n    </button>\n  )\n}\n\nexport default class DashBoard extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      userId: 1,\n      showNPM: false,\n      date: new Date(),\n      projects: [],\n      inbox: [],\n      trash: [],\n      upcomingTasks: []\n    }\n    this.taskService = new TaskService(this)\n  }\n\n  onChange = date => this.setState({ date })\n  openModal = () => this.setState({ showNPM: true })\n  handleModalClose = () => this.setState({ showNPM: false })\n  allTasks = () => this.props.projects.map(project => project.tasks).flat()\n\n  prosInRows = (pros) => {\n    const size = 3\n    const arrayOfArrays = []\n    for (var i = 0; i < pros.length; i += size) {\n      arrayOfArrays.push(pros.slice(i, i + size))\n    }\n    return arrayOfArrays\n  }\n\n  renderRows = () => {\n    return this.prosInRows(this.props.projects).map((row, index) => this.renderRow(row, index))\n  }\n\n  renderRow = (row, index) => (\n    <div className='row mx-auto' key={`row-${index}`} style={{ marginTop: 10 }}>\n      {row.map(project =>\n        <Col key={`project-${project.id}`} sm={4}>\n          <Link to={`/projects/${project.id}`}>\n\n            <Card key={`project-${project.id}`}>\n              <Card.Header>\n                {project.name}\n              </Card.Header>\n              <Card.Body>\n                {project.description}\n              </Card.Body>\n            </Card>\n          </Link>\n\n        </Col>\n      )}\n    </div>\n  )\n\n  handleProjectSubmit = (obj) => {\n    let newObj = { ...obj, userId: this.state.userId, isDeleted: false, isCompleted: false }\n    this.setState({ showNPM: false }, this.projectService.postProject(newObj))\n  }\n\n  completeTask = (taskId) => this.taskService.completeTask(taskId)\n\n  render() {\n    return (\n      <Container fluid>\n        <NewProjectModal handleProjectSubmit={this.handleProjectSubmit} show={this.state.showNPM} handleModalClose={this.handleModalClose} />\n        <Row>\n          <Col sm={3}>\n            <Calendar\n              onChange={this.onChange}\n              value={this.state.date}\n            />\n            <br />\n            <RecentlyCompletedTasks tasks={this.allTasks()} completeTask={this.completeTask} />\n          </Col>\n          <Col sm={6}>\n            <Card style={{ width: '850px', maxWidth: '100%', marginTop: 5 }}>\n              <Card.Header style={{ backgroundColor: '#0099FF', color: \"#fff\" }}>\n                <div className='float-left'>\n                  My Projects <i className=\"fa fa-fw fa-th-large\" style={{ fontSize: '1em', marginLeft: 5 }} />\n                </div>\n                <div className='float-right' onClick={() => this.openModal()}>\n                  <strong>New</strong><i className=\"fa fa-fw fa-plus-square\" style={{ fontSize: '1em', marginLeft: 5 }} />\n                </div>\n              </Card.Header>\n              <Card.Body>\n                {this.renderRows()}\n              </Card.Body>\n            </Card>\n            <br />\n            <UpcomingTasks dateFromState={this.state.date} tasks={this.allTasks().filter(task => !task.is_completed)} completeTask={this.completeTask} />\n          </Col>\n          <Col sm={3}>\n            <Accordion defaultActiveKey=\"0\">\n              <Card style={{ width: '100%', maxWidth: '100%' }}>\n                <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n                  Inbox <i className=\"fa fa-fw fa-inbox\" style={{ fontSize: '1em', marginLeft: 5 }} />\n                </Card.Header>\n                <ListGroup.Item>Inbox !</ListGroup.Item>\n                <Card.Header style={{ backgroundColor: '#666666', color: '#fff' }}>\n                  <CustomToggle eventkey=\"1\" color='#666666'>\n                    Trash <i className=\"fa fa-fw fa-trash\" style={{ fontSize: '1em', marginLeft: 5 }} />\n                  </CustomToggle>\n                </Card.Header>\n                <Accordion.Collapse eventkey=\"1\">\n                  <ListGroup.Item>Trash HERE!</ListGroup.Item>\n                </Accordion.Collapse>\n                <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n                  Upcoming Deadlines <i className=\"fa fa-fw fa-hourglass-end\" style={{ fontSize: '1em', marginLeft: 5 }} />\n                </Card.Header>\n                <ListGroup.Item>Deadlines 1</ListGroup.Item>\n                <ListGroup.Item>Deadlines 2</ListGroup.Item>\n                <ListGroup.Item>Deadlines 3</ListGroup.Item>\n                <ListGroup.Item>Deadlines 4</ListGroup.Item>\n              </Card>\n            </Accordion>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}