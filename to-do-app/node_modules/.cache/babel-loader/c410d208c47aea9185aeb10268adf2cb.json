{"ast":null,"code":"var _jsxFileName = \"/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/sub-components/UpcomingTasks.js\";\nimport React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap';\n\nconst getSpanText = text => {\n  if (text === 'Due Today') {\n    return React.createElement(\"span\", {\n      className: \"flex-fill text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, text);\n  }\n\n  return React.createElement(\"span\", {\n    className: \"flex-fill text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, text));\n};\n\nconst UpcomingTasks = ({\n  tasks,\n  dateFromState,\n  completeTask\n}) => {\n  // console.log(dateFromState)\n  // console.log(dateFromState.setHours(0, 0, 0, 0))\n  // const todaysDate = new Date().setHours(0, 0, 0, 0)\n  let upcomingTasks = tasks.filter(task => new Date(task.deadline).valueOf() <= dateFromState.setHours(0, 0, 0, 0).valueOf());\n  upcomingTasks = upcomingTasks.map(task => {\n    task['spanText'] = new Date(task.deadline).setHours(0, 0, 0, 0).valueOf() === dateFromState.setHours(0, 0, 0, 0).valueOf() ? 'Due Today' : 'Past Due';\n    return task;\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      width: '850px',\n      maxWidth: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    style: {\n      backgroundColor: '#0033CC',\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Upcoming Tasks \", React.createElement(\"i\", {\n    className: \"fa fa-fw fa-caret-up\",\n    style: {\n      fontSize: '1em',\n      marginLeft: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), upcomingTasks.map(task => {\n    return React.createElement(ListGroup.Item, {\n      className: \"d-flex\",\n      key: \"list-group-item-\".concat(task.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, task.title), React.createElement(\"div\", {\n      className: \"float-right\",\n      onClick: () => completeTask(task.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, getSpanText(task.spanText), React.createElement(\"i\", {\n      className: \"fa fa-fw fa-times-circle\",\n      style: {\n        fontSize: '1em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  })));\n};\n\nexport default UpcomingTasks;","map":{"version":3,"sources":["/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/sub-components/UpcomingTasks.js"],"names":["React","Card","ListGroup","getSpanText","text","color","UpcomingTasks","tasks","dateFromState","completeTask","upcomingTasks","filter","task","Date","deadline","valueOf","setHours","map","width","maxWidth","backgroundColor","fontSize","marginLeft","id","title","spanText"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Card, ListGroup } from 'react-bootstrap'\n\nconst getSpanText = (text) => {\n  if (text === 'Due Today') {\n    return <span className='flex-fill text-right'>{text}</span>\n  }\n  return <span className='flex-fill text-right'><i style={{ color: \"red\" }}>{text}</i></span>\n}\n\nconst UpcomingTasks = ({ tasks, dateFromState, completeTask }) => {\n  // console.log(dateFromState)\n  // console.log(dateFromState.setHours(0, 0, 0, 0))\n  // const todaysDate = new Date().setHours(0, 0, 0, 0)\n  let upcomingTasks = tasks.filter(task => new Date(task.deadline).valueOf() <= dateFromState.setHours(0, 0, 0, 0).valueOf())\n  upcomingTasks = upcomingTasks.map(task => {\n    task['spanText'] = new Date(task.deadline).setHours(0, 0, 0, 0).valueOf() === dateFromState.setHours(0, 0, 0, 0).valueOf() ? 'Due Today' : 'Past Due'\n    return task\n  })\n  return (\n    <div>\n      <Card style={{ width: '850px', maxWidth: '100%' }}>\n        <Card.Header style={{ backgroundColor: '#0033CC', color: \"#fff\" }}>\n          Upcoming Tasks <i className=\"fa fa-fw fa-caret-up\" style={{ fontSize: '1em', marginLeft: 5 }} />\n        </Card.Header>\n        {upcomingTasks.map(task => {\n          return(\n          <ListGroup.Item className='d-flex' key={`list-group-item-${task.id}`}>\n            <div className='float-left'>\n              {task.title}\n            </div>\n            <div className='float-right' onClick={() => completeTask(task.id)}>\n              {getSpanText(task.spanText)}<i className=\"fa fa-fw fa-times-circle\" style={{ fontSize: '1em'}} />\n            </div>\n          </ListGroup.Item>)}\n          )}\n      </Card>\n    </div>\n  )\n}\n\nexport default UpcomingTasks\n"]},"metadata":{},"sourceType":"module"}