{"ast":null,"code":"import _defineProperty from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import Calendar from'react-calendar';import NewProjectModal from'../sub-components/NewProjectModal.js';import UpcomingTasks from'../sub-components/UpcomingTasks.js';import RecentlyCompletedTasks from'../sub-components/RecentlyCompletedTasks.js';import ProjectCardsComponent from'../sub-components/ProjectCardsComponent';import{Container,Row,Col}from'react-bootstrap';var DashBoard=/*#__PURE__*/function(_React$Component){_inherits(DashBoard,_React$Component);function DashBoard(props){var _this;_classCallCheck(this,DashBoard);_this=_possibleConstructorReturn(this,_getPrototypeOf(DashBoard).call(this,props));_this.onChange=function(date){return _this.setState({date:date});};_this.openModal=function(){return _this.setState({showNPM:true});};_this.handleModalClose=function(){return _this.setState({showNPM:false});};_this.allTasks=function(){return _this.props.allTasks;};_this.handleProjectSubmit=function(obj){var newObj=_objectSpread({},obj,{userId:_this.props.authProps.loggedInUserId});_this.props.projectService.postProject(newObj);_this.setState({showNPM:false});};_this.completeTask=function(taskId){return _this.props.taskService.completeTask(taskId);};_this.state={userId:1,showNPM:false,date:new Date(),inbox:[],trash:[],upcomingTasks:[]};return _this;}_createClass(DashBoard,[{key:\"render\",value:function render(){return React.createElement(Container,{fluid:true},React.createElement(NewProjectModal,{handleProjectSubmit:this.handleProjectSubmit,show:this.state.showNPM,handleModalClose:this.handleModalClose}),React.createElement(Row,null,React.createElement(Col,{sm:3},React.createElement(Calendar,{className:\"mb-3\",onChange:this.onChange,value:this.state.date})),React.createElement(Col,{sm:6},React.createElement(ProjectCardsComponent,{projects:this.props.projects,openModal:this.openModal}),React.createElement(UpcomingTasks,{dateFromState:this.state.date,tasks:this.allTasks().filter(function(task){return!task.is_completed;}),completeTask:this.completeTask})),React.createElement(Col,{sm:3},React.createElement(RecentlyCompletedTasks,{tasks:this.allTasks(),completeTask:this.completeTask}))));}}]);return DashBoard;}(React.Component);// <Accordion defaultActiveKey=\"0\">\n//   <Card style={{ width: '100%', maxWidth: '100%' }}>\n//     <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n//       Inbox <i className=\"fa fa-fw fa-inbox\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//     </Card.Header>\n//     <ListGroup.Item>Inbox !</ListGroup.Item>\n//     <Card.Header style={{ backgroundColor: '#666666', color: '#fff' }}>\n//       <CustomToggle eventkey=\"1\" color='#666666'>\n//         Trash <i className=\"fa fa-fw fa-trash\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//       </CustomToggle>\n//     </Card.Header>\n//     <Accordion.Collapse eventkey=\"1\">\n//       <ListGroup.Item>Trash HERE!</ListGroup.Item>\n//     </Accordion.Collapse>\n//     <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n//       Upcoming Deadlines <i className=\"fa fa-fw fa-hourglass-end\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//     </Card.Header>\n//     <ListGroup.Item>Deadlines 1</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 2</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 3</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 4</ListGroup.Item>\n//   </Card>\n// </Accordion>\nexport{DashBoard as default};","map":{"version":3,"sources":["/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/src/components/main-components/DashBoard.js"],"names":["React","Calendar","NewProjectModal","UpcomingTasks","RecentlyCompletedTasks","ProjectCardsComponent","Container","Row","Col","DashBoard","props","onChange","date","setState","openModal","showNPM","handleModalClose","allTasks","handleProjectSubmit","obj","newObj","userId","authProps","loggedInUserId","projectService","postProject","completeTask","taskId","taskService","state","Date","inbox","trash","upcomingTasks","projects","filter","task","is_completed","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Calendar from 'react-calendar'\nimport NewProjectModal from '../sub-components/NewProjectModal.js'\nimport UpcomingTasks from '../sub-components/UpcomingTasks.js'\nimport RecentlyCompletedTasks from '../sub-components/RecentlyCompletedTasks.js'\nimport ProjectCardsComponent from '../sub-components/ProjectCardsComponent'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nexport default class DashBoard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userId: 1,\n      showNPM: false,\n      date: new Date(),\n      inbox: [],\n      trash: [],\n      upcomingTasks: []\n    }\n  }\n\n  onChange = date => this.setState({ date })\n  openModal = () => this.setState({ showNPM: true })\n  handleModalClose = () => this.setState({ showNPM: false })\n  allTasks = () => this.props.allTasks\n\n  handleProjectSubmit = (obj) => {\n    let newObj = { ...obj, userId: this.props.authProps.loggedInUserId }\n    this.props.projectService.postProject(newObj)\n    this.setState({ showNPM: false })\n  }\n\n  completeTask = (taskId) => this.props.taskService.completeTask(taskId)\n\n  render() {\n    return (\n      <Container fluid>\n        <NewProjectModal handleProjectSubmit={this.handleProjectSubmit} show={this.state.showNPM} handleModalClose={this.handleModalClose} />\n        <Row>\n          <Col sm={3}>\n            <Calendar className='mb-3' onChange={this.onChange} value={this.state.date} />\n          </Col>\n          <Col sm={6}>\n            <ProjectCardsComponent projects={this.props.projects} openModal={this.openModal} />\n            <UpcomingTasks dateFromState={this.state.date} tasks={this.allTasks().filter(task => !task.is_completed)} completeTask={this.completeTask} />\n          </Col>\n          <Col sm={3}>\n            <RecentlyCompletedTasks tasks={this.allTasks()} completeTask={this.completeTask} />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\n// <Accordion defaultActiveKey=\"0\">\n//   <Card style={{ width: '100%', maxWidth: '100%' }}>\n//     <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n//       Inbox <i className=\"fa fa-fw fa-inbox\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//     </Card.Header>\n//     <ListGroup.Item>Inbox !</ListGroup.Item>\n//     <Card.Header style={{ backgroundColor: '#666666', color: '#fff' }}>\n//       <CustomToggle eventkey=\"1\" color='#666666'>\n//         Trash <i className=\"fa fa-fw fa-trash\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//       </CustomToggle>\n//     </Card.Header>\n//     <Accordion.Collapse eventkey=\"1\">\n//       <ListGroup.Item>Trash HERE!</ListGroup.Item>\n//     </Accordion.Collapse>\n//     <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n//       Upcoming Deadlines <i className=\"fa fa-fw fa-hourglass-end\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//     </Card.Header>\n//     <ListGroup.Item>Deadlines 1</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 2</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 3</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 4</ListGroup.Item>\n//   </Card>\n// </Accordion>\n"]},"metadata":{},"sourceType":"module"}