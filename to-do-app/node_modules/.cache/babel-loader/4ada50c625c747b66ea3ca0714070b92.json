{"ast":null,"code":"export default class ProjectService {\n  constructor(component) {\n    this.fetchProjects = userId => {\n      fetch(\"\".concat(this.productionURL, \"/users/\").concat(userId, \"/projects\")).then(r => r.json()).then(projects => {\n        // setting tasks for parent component\n        const tasks = projects.map(project => project.tasks).flat();\n        this.component.setState({\n          projects,\n          tasks\n        });\n      });\n    };\n\n    this.postProject = project => {\n      fetch(\"\".concat(this.productionURL, \"/users/\").concat(project.userId, \"/projects\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify(project)\n      }).then(r => r.json()).then(newProject => {\n        this.component.setState({\n          projects: [...this.component.state.projects, newProject]\n        });\n      });\n    };\n\n    this.component = component;\n    this.productionURL = 'https://arcane-sands-50858.herokuapp.com';\n    this.devURL = 'http://localhost:3000';\n  }\n\n}","map":{"version":3,"sources":["/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/services/ProjectService.js"],"names":["ProjectService","constructor","component","fetchProjects","userId","fetch","productionURL","then","r","json","projects","tasks","map","project","flat","setState","postProject","method","headers","Accept","body","JSON","stringify","newProject","state","devURL"],"mappings":"AAAA,eAAe,MAAMA,cAAN,CAAqB;AAClCC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA,SAMvBC,aANuB,GAMNC,MAAD,IAAY;AAC1BC,MAAAA,KAAK,WAAI,KAAKC,aAAT,oBAAgCF,MAAhC,eAAL,CACGG,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQG,QAAQ,IAAI;AAChB;AACA,cAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAAIA,OAAO,CAACF,KAAhC,EAAuCG,IAAvC,EAAd;AACA,aAAKZ,SAAL,CAAea,QAAf,CAAwB;AAAEL,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,SAAxB;AACD,OANH;AAOD,KAdsB;;AAAA,SAgBvBK,WAhBuB,GAgBRH,OAAD,IAAa;AACzBR,MAAAA,KAAK,WAAI,KAAKC,aAAT,oBAAgCO,OAAO,CAACT,MAAxC,gBAA2D;AAC9Da,QAAAA,MAAM,EAAE,MADsD;AAE9DC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFqD;AAK3DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,OAAf;AALqD,OAA3D,CAAL,CAOGN,IAPH,CAOQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAPb,EAQGF,IARH,CAQQgB,UAAU,IAAI;AAClB,aAAKrB,SAAL,CAAea,QAAf,CAAwB;AAAEL,UAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKR,SAAL,CAAesB,KAAf,CAAqBd,QAAzB,EAAmCa,UAAnC;AAAZ,SAAxB;AACD,OAVH;AAWD,KA5BsB;;AACrB,SAAKrB,SAAL,GAAiBA,SAAjB;AACA,SAAKI,aAAL,GAAqB,0CAArB;AACA,SAAKmB,MAAL,GAAc,uBAAd;AACD;;AALiC","sourcesContent":["export default class ProjectService {\n  constructor(component) {\n    this.component = component\n    this.productionURL = 'https://arcane-sands-50858.herokuapp.com'\n    this.devURL = 'http://localhost:3000'\n  }\n\n  fetchProjects = (userId) => {\n    fetch(`${this.productionURL}/users/${userId}/projects`)\n      .then(r => r.json())\n      .then(projects => {\n        // setting tasks for parent component\n        const tasks = projects.map(project => project.tasks).flat()\n        this.component.setState({ projects, tasks })\n      })\n  }\n\n  postProject = (project) => {\n    fetch(`${this.productionURL}/users/${project.userId}/projects`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify(project)\n    })\n      .then(r => r.json())\n      .then(newProject => {\n        this.component.setState({ projects: [...this.component.state.projects, newProject] })\n      })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}