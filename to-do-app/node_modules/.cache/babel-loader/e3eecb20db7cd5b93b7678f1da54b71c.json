{"ast":null,"code":"var _jsxFileName = \"/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/sub-components/AllTasks.js\";\nimport React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport TaskModal from './TaskModal.js';\nimport ChecklistService from '../../services/ChecklistService.js';\n\nclass AllTasks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.closeModal = () => this.setState({\n      isModalHidden: true\n    });\n\n    this.openModal = task => {\n      this.ChecklistService.fetchChecklists(task.id);\n      this.setState({\n        isModalHidden: false,\n        task: task\n      });\n    };\n\n    this.state = {\n      isModalHidden: true,\n      task: {\n        id: 1\n      },\n      checklists: []\n    };\n    this.ChecklistService = new ChecklistService(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState !== this.state) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    const _this$props = this.props,\n          title = _this$props.title,\n          tasks = _this$props.tasks,\n          openModal = _this$props.openModal,\n          style = _this$props.style;\n    return React.createElement(Card, {\n      className: \"mb-2\",\n      style: {\n        width: '750px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(TaskModal, {\n      task: this.state.task,\n      show: !this.state.isModalHidden,\n      checklists: this.state.checklists,\n      closeModal: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Card.Header, {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, title, \" \", React.createElement(\"i\", {\n      className: \"fa fa-fw fa-th\",\n      style: {\n        fontSize: '1em',\n        marginLeft: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), title !== \"Completed Tasks\" ? React.createElement(\"div\", {\n      className: \"float-right\",\n      onClick: openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"New\"), React.createElement(\"i\", {\n      className: \"fa fa-fw fa-plus-square\",\n      style: {\n        fontSize: '1em',\n        marginLeft: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })) : null), tasks.map(task => React.createElement(\"div\", {\n      key: \"task-item\".concat(task.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      key: \"task-item-\".concat(task.id),\n      onClick: () => this.openModal(task),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, task.title))));\n  }\n\n}\n\nexport default AllTasks;","map":{"version":3,"sources":["/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/sub-components/AllTasks.js"],"names":["React","Card","ListGroup","TaskModal","ChecklistService","AllTasks","Component","constructor","props","closeModal","setState","isModalHidden","openModal","task","fetchChecklists","id","state","checklists","shouldComponentUpdate","nextProps","nextState","render","title","tasks","style","width","fontSize","marginLeft","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap'\nimport TaskModal from './TaskModal.js'\nimport ChecklistService from '../../services/ChecklistService.js'\n\n\nclass AllTasks extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isModalHidden: true,\n      task: {id: 1},\n      checklists: [],\n    }\n    this.ChecklistService = new ChecklistService(this)\n  }\n\n  closeModal = () => this.setState({isModalHidden: true})\n\n  shouldComponentUpdate(nextProps, nextState){\n    if(nextState !== this.state){\n      return true\n    }\n    return false\n  }\n\n  openModal = (task) => {\n    this.ChecklistService.fetchChecklists(task.id)\n    this.setState({isModalHidden: false, task: task})\n  }\n\n  render(){\n    const { title, tasks, openModal, style } = this.props\n    return(\n      <Card className='mb-2' style={{width: '750px'}}>\n        <TaskModal task={this.state.task} show={!this.state.isModalHidden} checklists={this.state.checklists} closeModal={this.closeModal}/>\n        <Card.Header style={style}>\n          <div className=\"float-left\">\n            {title} <i className=\"fa fa-fw fa-th\" style={{ fontSize: '1em', marginLeft: 5 }} />\n          </div>\n          {title !== \"Completed Tasks\" ?\n            <div className=\"float-right\" onClick={openModal}>\n              <strong>New</strong><i className=\"fa fa-fw fa-plus-square\" style={{ fontSize: '1em', marginLeft: 5 }} />\n            </div>\n            : null\n          }\n        </Card.Header>\n        {\n          tasks.map(task =>\n            <div key={`task-item${task.id}`}>\n              <ListGroup.Item key={`task-item-${task.id}`} onClick={() => this.openModal(task)}>{task.title}</ListGroup.Item>\n            </div>\n          )\n        }\n      </Card>\n    )\n  }\n}\n\nexport default AllTasks;\n"]},"metadata":{},"sourceType":"module"}