{"ast":null,"code":"class UserService {\n  constructor(component) {\n    this.createUser = user => {\n      fetch(\"\".concat(this.workingURL, \"/users\"), {\n        //eslint-disable-line\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user\n        })\n      }).then(response => response.json()).then(({\n        token,\n        user_id\n      }) => {\n        localStorage.token = token;\n        localStorage.userId = user_id;\n        this.component.setState({\n          token: token,\n          loggedInUserId: user_id\n        });\n      });\n    };\n\n    this.login = user => {\n      fetch(\"\".concat(this.workingURL, \"/login\"), {\n        //eslint-disable-line\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user\n        })\n      }).then(response => response.json()).then(({\n        token,\n        user_id\n      }) => {\n        localStorage.token = token;\n        localStorage.userId = user_id;\n        this.component.setState({\n          token: token,\n          loggedInUserId: user_id,\n          loggedIn: true\n        });\n      });\n    };\n\n    this.component = component;\n    this.workingURL = 'https://arcane-sands-50858.herokuapp.com'; // this.workingURL = 'http://localhost:3000'\n  }\n\n}\n\nexport default UserService;","map":{"version":3,"sources":["/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/src/services/UserService.js"],"names":["UserService","constructor","component","createUser","user","fetch","workingURL","method","headers","Accept","body","JSON","stringify","then","response","json","token","user_id","localStorage","userId","setState","loggedInUserId","login","loggedIn"],"mappings":"AAAA,MAAMA,WAAN,CAAkB;AAChBC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA,SAOvBC,UAPuB,GAOTC,IAAD,IAAU;AACrBC,MAAAA,KAAK,WAAI,KAAKC,UAAT,aAA6B;AAAE;AAClCC,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFuB;AAMhCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,UAAAA;AADmB,SAAf;AAN0B,OAA7B,CAAL,CAUGS,IAVH,CAUQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAVpB,EAWGF,IAXH,CAWQ,CAAC;AAAEG,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,KAAwB;AAC5BC,QAAAA,YAAY,CAACF,KAAb,GAAqBA,KAArB;AACAE,QAAAA,YAAY,CAACC,MAAb,GAAsBF,OAAtB;AACA,aAAKf,SAAL,CAAekB,QAAf,CAAwB;AACtBJ,UAAAA,KAAK,EAAEA,KADe;AAEtBK,UAAAA,cAAc,EAAEJ;AAFM,SAAxB;AAID,OAlBH;AAmBD,KA3BsB;;AAAA,SA6BvBK,KA7BuB,GA6BdlB,IAAD,IAAU;AAChBC,MAAAA,KAAK,WAAI,KAAKC,UAAT,aAA6B;AAAE;AAClCC,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFuB;AAMhCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,UAAAA;AADmB,SAAf;AAN0B,OAA7B,CAAL,CAUGS,IAVH,CAUQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAVpB,EAWGF,IAXH,CAWQ,CAAC;AAAEG,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,KAAwB;AAC5BC,QAAAA,YAAY,CAACF,KAAb,GAAqBA,KAArB;AACAE,QAAAA,YAAY,CAACC,MAAb,GAAsBF,OAAtB;AACA,aAAKf,SAAL,CAAekB,QAAf,CAAwB;AACtBJ,UAAAA,KAAK,EAAEA,KADe;AAEtBK,UAAAA,cAAc,EAAEJ,OAFM;AAGtBM,UAAAA,QAAQ,EAAE;AAHY,SAAxB;AAKD,OAnBH;AAoBD,KAlDsB;;AACrB,SAAKrB,SAAL,GAAiBA,SAAjB;AACA,SAAKI,UAAL,GAAkB,0CAAlB,CAFqB,CAGrB;AACD;;AALe;;AAqDlB,eAAeN,WAAf","sourcesContent":["class UserService {\n  constructor(component) {\n    this.component = component\n    this.workingURL = 'https://arcane-sands-50858.herokuapp.com'\n    // this.workingURL = 'http://localhost:3000'\n  }\n\n\n  createUser = (user) => {\n    fetch(`${this.workingURL}/users`, { //eslint-disable-line\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    })\n      .then(response => response.json())\n      .then(({ token, user_id }) => {\n        localStorage.token = token\n        localStorage.userId = user_id\n        this.component.setState({\n          token: token,\n          loggedInUserId: user_id,\n        })\n      })\n  }\n\n  login = (user) => {\n    fetch(`${this.workingURL}/login`, { //eslint-disable-line\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    })\n      .then(response => response.json())\n      .then(({ token, user_id }) => {\n        localStorage.token = token\n        localStorage.userId = user_id\n        this.component.setState({\n          token: token,\n          loggedInUserId: user_id,\n          loggedIn: true\n        })\n      })\n  }\n}\nexport default UserService\n"]},"metadata":{},"sourceType":"module"}