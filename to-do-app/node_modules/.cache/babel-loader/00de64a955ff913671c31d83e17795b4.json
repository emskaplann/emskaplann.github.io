{"ast":null,"code":"var _jsxFileName = \"/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/main-components/Projects.js\";\nimport React from 'react';\nimport { Container, Col, Row } from 'react-bootstrap/';\nimport TagSerivce from '../../services/TagService';\nimport ProjectTitleComponent from '../sub-components/ProjectTitleComponent';\nimport NotesCard from '../sub-components/NotesCard';\nimport AllTasks from '../sub-components/AllTasks';\nimport NewTaskModal from '../sub-components/NewTaskModal.js';\nexport default class Projects extends React.Component {\n  constructor() {\n    super();\n\n    this.openOrCloseModal = () => this.setState({\n      showNTM: !this.state.showNTM\n    });\n\n    this.completeTask = taskId => {\n      this.props.taskService.completeTask(taskId);\n    };\n\n    this.state = {\n      tags: [],\n      showNTM: false\n    };\n    this.tagService = new TagSerivce(this);\n  }\n\n  render() {\n    const project = this.props.project;\n    if (!project) return null;\n    const tasks = project.tasks.filter(task => !task.is_completed);\n    const completedTasks = project.tasks.filter(task => task.is_completed);\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(NewTaskModal, {\n      show: this.state.showNTM,\n      closeModal: this.openOrCloseModal,\n      project: this.props.project,\n      handleTaskSubmit: this.props.handleTaskSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Row, {\n      className: \"w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(ProjectTitleComponent, {\n      projectService: this.props.projectService,\n      project: project,\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(NotesCard, {\n      authProps: this.props.authProps,\n      className: \"mb-3\",\n      project: project,\n      openModal: this.openOrCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(AllTasks, {\n      key: \"length-of-tasks-\".concat(tasks.length),\n      completeTask: this.completeTask,\n      authProps: this.props.authProps,\n      title: \"Upcoming Tasks\",\n      tasks: tasks,\n      style: {\n        backgroundColor: '#4d1411',\n        color: \"#fff\"\n      },\n      openModal: this.openOrCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(AllTasks, {\n      key: \"length-of-completedTasks-\".concat(completedTasks.length),\n      authProps: this.props.authProps,\n      title: \"Completed Tasks\",\n      tasks: completedTasks,\n      style: {\n        backgroundColor: '#669900',\n        color: \"#fff\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/main-components/Projects.js"],"names":["React","Container","Col","Row","TagSerivce","ProjectTitleComponent","NotesCard","AllTasks","NewTaskModal","Projects","Component","constructor","openOrCloseModal","setState","showNTM","state","completeTask","taskId","props","taskService","tags","tagService","render","project","tasks","filter","task","is_completed","completedTasks","handleTaskSubmit","projectService","authProps","length","backgroundColor","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Col, Row } from 'react-bootstrap/';\nimport TagSerivce from '../../services/TagService';\nimport ProjectTitleComponent from '../sub-components/ProjectTitleComponent';\nimport NotesCard from '../sub-components/NotesCard';\nimport AllTasks from '../sub-components/AllTasks'\nimport NewTaskModal from '../sub-components/NewTaskModal.js'\n\nexport default class Projects extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tags: [],\n      showNTM: false\n    }\n    this.tagService = new TagSerivce(this)\n  }\n\n  openOrCloseModal = () => this.setState({ showNTM: !this.state.showNTM })\n\n  completeTask = (taskId) => {\n    this.props.taskService.completeTask(taskId)\n  }\n\n  render() {\n    const { project } = this.props\n    if (!project) return null\n    const tasks = project.tasks.filter(task => !task.is_completed)\n    const completedTasks = project.tasks.filter(task => task.is_completed)\n    return (\n      <Container fluid>\n        <NewTaskModal show={this.state.showNTM} closeModal={this.openOrCloseModal} project={this.props.project} handleTaskSubmit={this.props.handleTaskSubmit} />\n        <Row className='w-100'>\n          <Col sm={7}>\n            <ProjectTitleComponent projectService={this.props.projectService} project={project} className='mb-3' />\n            <NotesCard authProps={this.props.authProps} className='mb-3' project={project} openModal={this.openOrCloseModal} />\n          </Col>\n          <Col sm={5}>\n            {/* need to send in checklist service and item service from app.js  */}\n            <AllTasks key={`length-of-tasks-${tasks.length}`} completeTask={this.completeTask} authProps={this.props.authProps} title='Upcoming Tasks' tasks={tasks} style={{ backgroundColor: '#4d1411', color: \"#fff\" }} openModal={this.openOrCloseModal} />\n            <AllTasks key={`length-of-completedTasks-${completedTasks.length}`} authProps={this.props.authProps} title='Completed Tasks' tasks={completedTasks} style={{ backgroundColor: '#669900', color: \"#fff\" }} />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}