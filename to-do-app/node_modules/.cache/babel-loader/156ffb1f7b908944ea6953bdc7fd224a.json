{"ast":null,"code":"export default class ProjectService {\n  constructor(component) {\n    this.fetchProjects = userId => {\n      fetch(\"\".concat(this.productionURL, \"/users/\").concat(userId, \"/projects\")).then(r => r.json()).then(projects => {\n        // setting tasks for parent component\n        const allTasks = projects.map(project => project.tasks).flat();\n        this.component.setState({\n          projects,\n          allTasks\n        });\n      });\n    };\n\n    this.postProject = project => {\n      fetch(\"\".concat(this.productionURL, \"/users/\").concat(project.userId, \"/projects\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify(project)\n      }).then(r => r.json()).then(newProject => this.component.setState({\n        projects: [...this.component.state.projects, newProject]\n      }));\n    };\n\n    this.postTask = task => {\n      fetch(\"\".concat(this.productionURL, \"/projects/\").concat(task.projectId, \"/tasks\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          task: task\n        })\n      }).then(r => r.json()).then(newTask => console.log(newTask));\n    };\n\n    this.component = component;\n    this.productionURL = 'https://arcane-sands-50858.herokuapp.com';\n    this.devURL = 'http://localhost:3000';\n  }\n\n}","map":{"version":3,"sources":["/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/services/ProjectService.js"],"names":["ProjectService","constructor","component","fetchProjects","userId","fetch","productionURL","then","r","json","projects","allTasks","map","project","tasks","flat","setState","postProject","method","headers","Accept","body","JSON","stringify","newProject","state","postTask","task","projectId","newTask","console","log","devURL"],"mappings":"AAAA,eAAe,MAAMA,cAAN,CAAqB;AAClCC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA,SAMvBC,aANuB,GAMNC,MAAD,IAAY;AAC1BC,MAAAA,KAAK,WAAI,KAAKC,aAAT,oBAAgCF,MAAhC,eAAL,CACGG,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQG,QAAQ,IAAI;AAChB;AACA,cAAMC,QAAQ,GAAGD,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAAIA,OAAO,CAACC,KAAhC,EAAuCC,IAAvC,EAAjB;AACA,aAAKb,SAAL,CAAec,QAAf,CAAwB;AAAEN,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,SAAxB;AACD,OANH;AAOD,KAdsB;;AAAA,SAgBvBM,WAhBuB,GAgBRJ,OAAD,IAAa;AACzBR,MAAAA,KAAK,WAAI,KAAKC,aAAT,oBAAgCO,OAAO,CAACT,MAAxC,gBAA2D;AAC9Dc,QAAAA,MAAM,EAAE,MADsD;AAE9DC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFqD;AAK3DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,OAAf;AALqD,OAA3D,CAAL,CAOGN,IAPH,CAOQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAPb,EAQGF,IARH,CAQQiB,UAAU,IAAI,KAAKtB,SAAL,CAAec,QAAf,CAAwB;AAAEN,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKR,SAAL,CAAeuB,KAAf,CAAqBf,QAAzB,EAAmCc,UAAnC;AAAZ,OAAxB,CARtB;AASD,KA1BsB;;AAAA,SA4BvBE,QA5BuB,GA4BXC,IAAD,IAAU;AACnBtB,MAAAA,KAAK,WAAI,KAAKC,aAAT,uBAAmCqB,IAAI,CAACC,SAAxC,aAA2D;AAC9DV,QAAAA,MAAM,EAAE,MADsD;AAE9DC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFqD;AAK3DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACI,UAAAA,IAAI,EAAEA;AAAP,SAAf;AALqD,OAA3D,CAAL,CAOCpB,IAPD,CAOMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAPX,EAQCF,IARD,CAQMsB,OAAO,IAAIC,OAAO,CAACC,GAAR,CAAYF,OAAZ,CARjB;AASD,KAtCsB;;AACrB,SAAK3B,SAAL,GAAiBA,SAAjB;AACA,SAAKI,aAAL,GAAqB,0CAArB;AACA,SAAK0B,MAAL,GAAc,uBAAd;AACD;;AALiC","sourcesContent":["export default class ProjectService {\n  constructor(component) {\n    this.component = component\n    this.productionURL = 'https://arcane-sands-50858.herokuapp.com'\n    this.devURL = 'http://localhost:3000'\n  }\n\n  fetchProjects = (userId) => {\n    fetch(`${this.productionURL}/users/${userId}/projects`)\n      .then(r => r.json())\n      .then(projects => {\n        // setting tasks for parent component\n        const allTasks = projects.map(project => project.tasks).flat()\n        this.component.setState({ projects, allTasks })\n      })\n  }\n\n  postProject = (project) => {\n    fetch(`${this.productionURL}/users/${project.userId}/projects`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify(project)\n    })\n      .then(r => r.json())\n      .then(newProject => this.component.setState({ projects: [...this.component.state.projects, newProject] }))\n  }\n\n  postTask = (task) => {\n    fetch(`${this.productionURL}/projects/${task.projectId}/tasks`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify({task: task})\n    })\n    .then(r => r.json())\n    .then(newTask => console.log(newTask))\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}