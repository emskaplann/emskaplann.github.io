{"ast":null,"code":"var _jsxFileName = \"/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/sub-components/TaskModal.js\";\nimport React from 'react';\nimport { Modal, Button, Form, Col, Row, Accordion, ListGroup, useAccordionToggle } from 'react-bootstrap';\n\nfunction CustomToggle({\n  children,\n  eventKey,\n  color,\n  comp\n}) {\n  const changeContent = useAccordionToggle(eventKey, function (comp) {\n    comp.setState({\n      activeAccKey: parseInt(eventKey)\n    });\n  });\n  return React.createElement(\"button\", {\n    type: \"button\",\n    style: {\n      backgroundColor: color,\n      color: '#fff',\n      border: 0\n    },\n    onClick: () => changeContent(comp),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, children);\n}\n\nexport default class TaskModal extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      activeAccKey: 0\n    };\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      show: this.props.show,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.task.title), React.createElement(\"div\", {\n      className: \"float-right\",\n      onClick: () => this.props.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-fw fa-times-circle\",\n      style: {\n        fontSize: '1.5em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      activeKey: this.state.activeAccKey,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.props.checklists.map(checklist => {\n      return React.createElement(\"div\", {\n        key: checklist.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(CustomToggle, {\n        eventkey: checklist.id,\n        comp: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, checklist.title)), React.createElement(Accordion.Collapse, {\n        eventkey: checklist.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, checklist.items.map(item => {\n        return React.createElement(ListGroup.Item, {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"float-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, item.text), React.createElement(\"div\", {\n          className: \"float-right\",\n          onClick: console.log(item.id + ' ' + checklist.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, item.is_completed ? React.createElement(\"i\", {\n          className: \"fa fa-fw fa-check\",\n          style: {\n            fontSize: '1.5em',\n            color: 'silver'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }) : React.createElement(\"i\", {\n          className: \"fa fa-fw fa-green\",\n          style: {\n            fontSize: '1.5em',\n            color: 'green'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        })));\n      }))));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/sub-components/TaskModal.js"],"names":["React","Modal","Button","Form","Col","Row","Accordion","ListGroup","useAccordionToggle","CustomToggle","children","eventKey","color","comp","changeContent","setState","activeAccKey","parseInt","backgroundColor","border","TaskModal","Component","constructor","state","render","props","show","task","title","closeModal","fontSize","checklists","map","checklist","id","items","item","text","console","log","is_completed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,GAA9B,EAAmCC,GAAnC,EAAwCC,SAAxC,EAAmDC,SAAnD,EAA8DC,kBAA9D,QAAwF,iBAAxF;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA;AAA7B,CAAtB,EAA2D;AACzD,QAAMC,aAAa,GAAGN,kBAAkB,CAACG,QAAD,EAAW,UAASE,IAAT,EAAc;AAC/DA,IAAAA,IAAI,CAACE,QAAL,CAAc;AACZC,MAAAA,YAAY,EAAEC,QAAQ,CAACN,QAAD;AADV,KAAd;AAGD,GAJuC,CAAxC;AAMA,SACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAE;AAAEO,MAAAA,eAAe,EAAEN,KAAnB;AAA0BA,MAAAA,KAAK,EAAE,MAAjC;AAAyCO,MAAAA,MAAM,EAAE;AAAjD,KAFT;AAGE,IAAA,OAAO,EAAE,MAAML,aAAa,CAACD,IAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGH,QALH,CADF;AASD;;AAED,eAAe,MAAMU,SAAN,SAAwBpB,KAAK,CAACqB,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXP,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AACDQ,EAAAA,MAAM,GAAE;AACN,WACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,KADnB,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,OAAO,EAAE,MAAM,KAAKH,KAAL,CAAWI,UAAX,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,0BAAb;AAAwC,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF,EASE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAE,KAAKP,KAAL,CAAWP,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKS,KAAL,CAAWM,UAAX,CAAsBC,GAAtB,CAA0BC,SAAS,IAAI;AACrC,aACF;AAAK,QAAA,GAAG,EAAEA,SAAS,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAED,SAAS,CAACC,EAAlC;AAAsC,QAAA,IAAI,EAAE,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,SAAS,CAACL,KADb,CADF,CADF,EAMA,oBAAC,SAAD,CAAW,QAAX;AAAoB,QAAA,QAAQ,EAAEK,SAAS,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,SAAS,CAACE,KAAV,CAAgBH,GAAhB,CAAoBI,IAAI,IAAI;AAC3B,eACE,oBAAC,SAAD,CAAW,IAAX;AAAgB,UAAA,GAAG,EAAEA,IAAI,CAACF,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGE,IAAI,CAACC,IADR,CADF,EAIE;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACF,EAAL,GAAU,GAAV,GAAgBD,SAAS,CAACC,EAAtC,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGE,IAAI,CAACI,YAAL,GAAoB;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAiC,UAAA,KAAK,EAAE;AAAEV,YAAAA,QAAQ,EAAE,OAAZ;AAAqBlB,YAAAA,KAAK,EAAE;AAA5B,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApB,GAAwG;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAiC,UAAA,KAAK,EAAE;AAAEkB,YAAAA,QAAQ,EAAE,OAAZ;AAAqBlB,YAAAA,KAAK,EAAE;AAA5B,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD3G,CAJF,CADF;AAUD,OAXA,CADH,CADF,CANA,CADE;AAyBH,KA1BC,CAFF,CADF,CATF,CADF;AA6CD;;AArDoD","sourcesContent":["import React from 'react'\nimport { Modal, Button, Form, Col, Row, Accordion, ListGroup, useAccordionToggle } from 'react-bootstrap'\n\nfunction CustomToggle({ children, eventKey, color, comp }) {\n  const changeContent = useAccordionToggle(eventKey, function(comp){\n    comp.setState({\n      activeAccKey: parseInt(eventKey)\n    })\n  })\n\n  return (\n    <button\n      type=\"button\"\n      style={{ backgroundColor: color, color: '#fff', border: 0 }}\n      onClick={() => changeContent(comp)}\n    >\n      {children}\n    </button>\n  )\n}\n\nexport default class TaskModal extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      activeAccKey: 0\n    }\n  }\n  render(){\n    return(\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <div className='float-left'>\n            {this.props.task.title}\n          </div>\n          <div className='float-right' onClick={() => this.props.closeModal()}>\n            <i className=\"fa fa-fw fa-times-circle\" style={{ fontSize: '1.5em'}} />\n          </div>\n        </Modal.Header>\n        <Modal.Body>\n          <Accordion activeKey={this.state.activeAccKey}>\n          {\n            this.props.checklists.map(checklist => {\n              return(\n            <div key={checklist.id}>\n              <CustomToggle eventkey={checklist.id} comp={this}>\n                <ListGroup.Item active>\n                  {checklist.title}\n                </ListGroup.Item>\n              </CustomToggle>\n            <Accordion.Collapse eventkey={checklist.id}>\n              <div>\n                {checklist.items.map(item => {\n                  return(\n                    <ListGroup.Item key={item.id}>\n                      <div className='float-left'>\n                        {item.text}\n                      </div>\n                      <div className='float-right' onClick={console.log(item.id + ' ' + checklist.id)}>\n                        {item.is_completed ? <i className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: 'silver'}} /> : <i className=\"fa fa-fw fa-green\" style={{ fontSize: '1.5em', color: 'green'}} />}\n                      </div>\n                    </ListGroup.Item>\n                  )\n                })}\n                </div>\n              </Accordion.Collapse>\n            </div>\n              )\n          })\n        }\n        </Accordion>\n      </Modal.Body>\n    </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}