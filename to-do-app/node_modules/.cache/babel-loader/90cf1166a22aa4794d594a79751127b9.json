{"ast":null,"code":"import _classCallCheck from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Card,ListGroup}from'react-bootstrap/';import NoteService from'../../services/NoteService';import{Button,Form,Col,Row}from'react-bootstrap';var NotesCard=/*#__PURE__*/function(_Component){_inherits(NotesCard,_Component);function NotesCard(props){var _this;_classCallCheck(this,NotesCard);_this=_possibleConstructorReturn(this,_getPrototypeOf(NotesCard).call(this,props));_this.handleSubmit=function(note){_this.noteService.createNote(note,_this.props.project.id);_this.openOrCloseModal();};_this.openOrCloseModal=function(){return _this.setState({isModalHidden:!_this.state.isModalHidden});};_this.renderForm=function(){return React.createElement(Form,null,React.createElement(Form.Group,{as:Row,controlId:\"formProName\",className:\"text-center\"},React.createElement(Col,{sm:\"9\"},React.createElement(Form.Control,{as:\"textarea\",autoFocus:true,onChange:function onChange(event){return _this.setState({text:event.target.value});},placeholder:\"Enter text here...\",value:_this.state.text})),React.createElement(Col,{sm:\"3\",className:\"my-auto\"},React.createElement(Button,{onClick:function onClick(event){return _this.handleSubmit({note:{text:_this.state.text}});},variant:\"primary\"},\"Add Note\"))));};_this.state={isModalHidden:false,notes:[],text:''};_this.noteService=new NoteService(_assertThisInitialized(_this));return _this;}_createClass(NotesCard,[{key:\"componentDidMount\",value:function componentDidMount(){this.noteService.fetchNotesForProject(this.props.project.id);}},{key:\"render\",value:function render(){var _this2=this;var className=this.props.className;return React.createElement(Card,{className:className},React.createElement(Card.Header,{style:{backgroundColor:'#990033',color:'#fff'}},\"Notes \",React.createElement(\"i\",{className:\"fa fa-fw fa-pencil-square-o\",style:{fontSize:'1em',marginLeft:5}}),React.createElement(\"div\",{className:\"float-right\",onClick:this.openOrCloseModal},React.createElement(\"strong\",null,!this.state.isModalHidden?\"New\":\"Cancel\"),React.createElement(\"i\",{className:\"fa fa-fw fa-plus-square\",style:{fontSize:'1em',marginLeft:5}}))),React.createElement(Card.Body,null,this.state.isModalHidden?this.renderForm():null,this.state.notes.map(function(note){return React.createElement(ListGroup.Item,{className:\"d-flex\",key:\"note-item-\".concat(note.id),style:{border:'1px solid #d3d3d3'}},note.text,React.createElement(\"span\",{className:\"flex-fill text-right\",onClick:function onClick(){return _this2.noteService.deleteNote(note.id);}},React.createElement(\"i\",{className:\"fa fa-fw fa-trash\",style:{fontSize:\"1.25em\",color:\"darkgray\"}})));})));}}]);return NotesCard;}(Component);export default NotesCard;","map":{"version":3,"sources":["/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/src/components/sub-components/NotesCard.js"],"names":["React","Component","Card","ListGroup","NoteService","Button","Form","Col","Row","NotesCard","props","handleSubmit","note","noteService","createNote","project","id","openOrCloseModal","setState","isModalHidden","state","renderForm","event","text","target","value","notes","fetchNotesForProject","className","backgroundColor","color","fontSize","marginLeft","map","border","deleteNote"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, ListGroup } from 'react-bootstrap/'\nimport NoteService from '../../services/NoteService';\nimport { Button, Form, Col, Row } from 'react-bootstrap'\n\nclass NotesCard extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isModalHidden: false,\n      notes: [],\n      text: ''\n    }\n    this.noteService = new NoteService(this)\n  }\n\n  handleSubmit = (note) => {\n    this.noteService.createNote(note, this.props.project.id)\n    this.openOrCloseModal()\n  }\n\n  openOrCloseModal = () => this.setState({ isModalHidden: !this.state.isModalHidden })\n\n  componentDidMount() {\n    this.noteService.fetchNotesForProject(this.props.project.id)\n  }\n\n  renderForm = () => (\n    <Form>\n      <Form.Group as={Row} controlId=\"formProName\" className='text-center'>\n        <Col sm=\"9\">\n          <Form.Control as=\"textarea\" autoFocus={true} onChange={(event) => this.setState({ text: event.target.value })} placeholder=\"Enter text here...\" value={this.state.text} />\n        </Col>\n        <Col sm=\"3\" className='my-auto'>\n          <Button onClick={(event) => this.handleSubmit({ note: { text: this.state.text } })} variant=\"primary\">\n            Add Note\n          </Button>\n        </Col>\n      </Form.Group>\n    </Form>\n  )\n\n  render() {\n    const { className } = this.props\n    return (\n      <Card className={className}>\n        {/* <NotesModal show={this.state.isModalHidden} closeModal={this.openOrCloseModal} handleSubmit={this.handleSubmit} /> */}\n        <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n          Notes <i className=\"fa fa-fw fa-pencil-square-o\" style={{ fontSize: '1em', marginLeft: 5 }} />\n          <div className=\"float-right\" onClick={this.openOrCloseModal}>\n            <strong>{!this.state.isModalHidden ? \"New\" : \"Cancel\"}</strong><i className=\"fa fa-fw fa-plus-square\" style={{ fontSize: '1em', marginLeft: 5 }} />\n          </div>\n        </Card.Header>\n        <Card.Body>\n          {this.state.isModalHidden ? this.renderForm() : null}\n          {this.state.notes.map(note => (\n            <ListGroup.Item className='d-flex' key={`note-item-${note.id}`} style={{ border: '1px solid #d3d3d3' }}>\n              {note.text}\n              <span className='flex-fill text-right' onClick={() => this.noteService.deleteNote(note.id)}>\n                <i className=\"fa fa-fw fa-trash\" style={{ fontSize: \"1.25em\", color: \"darkgray\" }}></i>\n              </span>\n            </ListGroup.Item>\n          ))}\n        </Card.Body>\n      </Card>\n    )\n  }\n\n}\n\nexport default NotesCard\n"]},"metadata":{},"sourceType":"module"}