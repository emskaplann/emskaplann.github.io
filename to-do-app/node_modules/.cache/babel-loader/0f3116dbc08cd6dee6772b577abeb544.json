{"ast":null,"code":"export default class ItemService {\n  constructor(component) {\n    this.createNewItem = (checklistId, item) => {\n      fetch(\"https://arcane-sands-50858.herokuapp.com/checklists/\".concat(checklistId, \"/items\"), {\n        //eslint-disable-line \n        method: 'POST',\n        headers: {\n          \"Authorization\": this.component.props.authProps.token,\n          'content-type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          item\n        })\n      }).then(response => response.json()).then(newItem => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId);\n        const newChecklist = Object.assign({}, oldChecklist);\n        newChecklist.items = [...newChecklist.items, newItem];\n        this.component.updateChecklistsWith(newChecklist);\n      });\n    };\n\n    this.completeItem = (itemId, bool, checklistId) => {\n      fetch(\"https://arcane-sands-50858.herokuapp.com/items/\".concat(itemId), {\n        method: 'PATCH',\n        headers: {\n          \"Authorization\": this.component.props.authProps.token,\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          item: {\n            is_completed: bool\n          }\n        })\n      }).then(r => r.json()).then(editedItem => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId);\n        const newChecklist = Object.assign({}, oldChecklist);\n        newChecklist.items = newChecklist.items.map(item => editedItem.id === item.id ? editedItem : item);\n        this.component.updateChecklistsWith(newChecklist);\n      });\n    };\n\n    this.deleteItem = (itemId, checklistId) => {\n      fetch(\"https://arcane-sands-50858.herokuapp.com/items/\".concat(itemId), {\n        method: 'DELETE',\n        headers: {\n          \"Authorization\": this.component.props.authProps.token,\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(r => r.json()).then(item => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId);\n        const newChecklist = Object.assign({}, oldChecklist);\n        newChecklist.items = newChecklist.items.filter(oldItem => oldItem.id !== item.id);\n        this.component.setState({\n          checklists: this.component.state.checklists.map(list => list.id === newChecklist.id ? newChecklist : list)\n        });\n      });\n    };\n\n    this.component = component;\n  }\n\n}","map":{"version":3,"sources":["/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/src/services/ItemService.js"],"names":["ItemService","constructor","component","createNewItem","checklistId","item","fetch","method","headers","props","authProps","token","Accept","body","JSON","stringify","then","response","json","newItem","oldChecklist","state","checklists","find","list","id","newChecklist","Object","assign","items","updateChecklistsWith","completeItem","itemId","bool","is_completed","r","editedItem","map","deleteItem","filter","oldItem","setState"],"mappings":"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","sourcesContent":["export default class ItemService {\n  constructor(component) {\n    this.component = component\n  }\n\n  createNewItem = (checklistId, item) => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/checklists/${checklistId}/items`, { //eslint-disable-line \n      method: 'POST',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        item\n      })\n    })\n      .then(response => response.json())\n      .then(newItem => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId)\n        const newChecklist = Object.assign({}, oldChecklist)\n        newChecklist.items = [...newChecklist.items, newItem]\n        this.component.updateChecklistsWith(newChecklist)\n      })\n  }\n\n  completeItem = (itemId, bool, checklistId) => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/items/${itemId}`, {\n      method: 'PATCH',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify({\n        item: {\n          is_completed: bool\n        }\n      })\n    })\n      .then(r => r.json())\n      .then(editedItem => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId)\n        const newChecklist = Object.assign({}, oldChecklist)\n        newChecklist.items = newChecklist.items.map(item => editedItem.id === item.id ? editedItem : item)\n        this.component.updateChecklistsWith(newChecklist)\n      })\n  }\n\n  deleteItem = (itemId, checklistId) => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/items/${itemId}`, {\n      method: 'DELETE',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(r => r.json())\n      .then(item => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId)\n        const newChecklist = Object.assign({}, oldChecklist)\n        newChecklist.items = newChecklist.items.filter(oldItem => oldItem.id !== item.id)\n        this.component.setState({\n          checklists: this.component.state.checklists.map(list => list.id === newChecklist.id ? newChecklist : list)\n        })\n      })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}