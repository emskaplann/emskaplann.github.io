{"ast":null,"code":"var _jsxFileName = \"/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/sub-components/SideNav.js\";\nimport React from 'react';\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport DashBoard from '../main-components/DashBoard.js';\nimport Projects from '../main-components/Projects.js';\nimport Tasks from '../main-components/Tasks.js';\nimport { BrowserRouter as Router, Route, useParams } from 'react-router-dom';\nimport ProjectService from '../../services/ProjectService.js';\nexport default class SideNavPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      projects: [],\n      allTasks: []\n    };\n    this.projectService = new ProjectService(this);\n  }\n\n  componentDidMount() {\n    this.projectService.fetchProjects(1);\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Route, {\n      render: ({\n        location,\n        history\n      }) => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(SideNav, {\n        style: {\n          position: 'fixed'\n        },\n        onSelect: selected => {\n          const to = '/' + selected;\n\n          if (location.pathname !== to) {\n            history.push(to);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(SideNav.Toggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(SideNav.Nav, {\n        defaultSelected: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        eventKey: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(NavIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-fw fa-home\",\n        style: {\n          fontSize: '1.75em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(NavText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"DashBoard\")), React.createElement(NavItem, {\n        eventKey: \"projects/1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(NavIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-fw fa-list-alt\",\n        style: {\n          fontSize: '1.75em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(NavText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Projects\")), React.createElement(NavItem, {\n        eventKey: \"tasks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(NavIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-fw fa-tasks\",\n        style: {\n          fontSize: '1.75em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(NavText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Tasks\")))), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/dashboard\",\n        exact: true,\n        component: props => React.createElement(DashBoard, {\n          projects: this.state.projects,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/projects/:id\",\n        component: props => React.createElement(Projects, {\n          project: this.state.projects.find(project => project.id === parseInt(useParams().id)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/tasks\",\n        component: props => React.createElement(Tasks, {\n          tasks: this.state.tasks,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/sub-components/SideNav.js"],"names":["React","SideNav","Toggle","Nav","NavItem","NavIcon","NavText","DashBoard","Projects","Tasks","BrowserRouter","Router","Route","useParams","ProjectService","SideNavPage","Component","constructor","state","projects","allTasks","projectService","componentDidMount","fetchProjects","render","location","history","position","selected","to","pathname","push","fontSize","props","find","project","id","parseInt","tasks"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav'\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css'\nimport DashBoard from '../main-components/DashBoard.js'\nimport Projects from '../main-components/Projects.js'\nimport Tasks from '../main-components/Tasks.js'\nimport { BrowserRouter as Router, Route, useParams } from 'react-router-dom'\nimport ProjectService from '../../services/ProjectService.js'\n\n\nexport default class SideNavPage extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      projects: [],\n      allTasks: [],\n    }\n    this.projectService = new ProjectService(this)\n  }\n\n  componentDidMount() {\n    this.projectService.fetchProjects(1)\n  }\n\n  render() {\n    return (\n      <Router>\n        <Route render={({ location, history }) => (\n          <React.Fragment>\n            <SideNav\n              style={{ position: 'fixed' }}\n              onSelect={(selected) => {\n                const to = '/' + selected\n                if (location.pathname !== to) {\n                  history.push(to)\n                }\n              }}\n            >\n              <SideNav.Toggle />\n              <SideNav.Nav defaultSelected=\"dashboard\">\n                <NavItem eventKey=\"dashboard\">\n                  <NavIcon>\n                    <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\n                  </NavIcon>\n                  <NavText>\n                    DashBoard\n                  </NavText>\n                </NavItem>\n                <NavItem eventKey=\"projects/1\">\n                  <NavIcon>\n                    <i className=\"fa fa-fw fa-list-alt\" style={{ fontSize: '1.75em' }} />\n                  </NavIcon>\n                  <NavText>\n                    Projects\n                  </NavText>\n                </NavItem>\n                <NavItem eventKey=\"tasks\">\n                  <NavIcon>\n                    <i className=\"fa fa-fw fa-tasks\" style={{ fontSize: '1.75em' }} />\n                  </NavIcon>\n                  <NavText>\n                    Tasks\n                  </NavText>\n                </NavItem>\n              </SideNav.Nav>\n            </SideNav>\n            <main>\n              <Route path=\"/dashboard\" exact component={props => <DashBoard projects={this.state.projects} />} />\n              <Route path=\"/projects/:id\" component={props => <Projects project={this.state.projects.find(project => project.id === parseInt(useParams().id))} />} />\n              <Route path=\"/tasks\" component={props => <Tasks tasks={this.state.tasks}/>} />\n            </main>\n          </React.Fragment>\n        )}\n        />\n      </Router>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}