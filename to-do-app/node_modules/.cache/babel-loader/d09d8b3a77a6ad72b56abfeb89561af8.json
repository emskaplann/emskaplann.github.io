{"ast":null,"code":"import _defineProperty from \"/Users/emskaplann/final_projects/04-module/to-do-app-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/main-components/DashBoard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Calendar from 'react-calendar';\nimport NewProjectModal from '../sub-components/NewProjectModal.js';\nimport UpcomingTasks from '../sub-components/UpcomingTasks.js';\nimport RecentlyCompletedTasks from '../sub-components/RecentlyCompletedTasks.js';\nimport ProjectCardsComponent from '../sub-components/ProjectCardsComponent';\nimport { Container, Accordion, Row, Col, Card, ListGroup, useAccordionToggle } from 'react-bootstrap';\nexport default class DashBoard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = date => this.setState({\n      date\n    });\n\n    this.openModal = () => this.setState({\n      showNPM: true\n    });\n\n    this.handleModalClose = () => this.setState({\n      showNPM: false\n    });\n\n    this.allTasks = () => this.props.allTasks;\n\n    this.handleProjectSubmit = obj => {\n      let newObj = _objectSpread({}, obj, {\n        userId: this.props.authProps.loggedInUserId\n      });\n\n      this.props.projectService.postProject(newObj);\n      this.setState({\n        showNPM: false\n      });\n    };\n\n    this.completeTask = taskId => this.props.taskService.completeTask(taskId);\n\n    this.state = {\n      userId: 1,\n      showNPM: false,\n      date: new Date(),\n      inbox: [],\n      trash: [],\n      upcomingTasks: []\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(NewProjectModal, {\n      handleProjectSubmit: this.handleProjectSubmit,\n      show: this.state.showNPM,\n      handleModalClose: this.handleModalClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Calendar, {\n      className: \"mb-3\",\n      onChange: this.onChange,\n      value: this.state.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ProjectCardsComponent, {\n      projects: this.props.projects,\n      openModal: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(UpcomingTasks, {\n      dateFromState: this.state.date,\n      tasks: this.allTasks().filter(task => !task.is_completed),\n      completeTask: this.completeTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(RecentlyCompletedTasks, {\n      tasks: this.allTasks(),\n      completeTask: this.completeTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction CustomToggle({\n  children,\n  eventKey,\n  color\n}) {\n  const changeContent = useAccordionToggle(eventKey, () => {});\n  return React.createElement(\"button\", {\n    type: \"button\",\n    style: {\n      backgroundColor: color,\n      color: '#fff',\n      border: 0\n    },\n    onClick: changeContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, children);\n} // <Accordion defaultActiveKey=\"0\">\n//   <Card style={{ width: '100%', maxWidth: '100%' }}>\n//     <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n//       Inbox <i className=\"fa fa-fw fa-inbox\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//     </Card.Header>\n//     <ListGroup.Item>Inbox !</ListGroup.Item>\n//     <Card.Header style={{ backgroundColor: '#666666', color: '#fff' }}>\n//       <CustomToggle eventkey=\"1\" color='#666666'>\n//         Trash <i className=\"fa fa-fw fa-trash\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//       </CustomToggle>\n//     </Card.Header>\n//     <Accordion.Collapse eventkey=\"1\">\n//       <ListGroup.Item>Trash HERE!</ListGroup.Item>\n//     </Accordion.Collapse>\n//     <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n//       Upcoming Deadlines <i className=\"fa fa-fw fa-hourglass-end\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//     </Card.Header>\n//     <ListGroup.Item>Deadlines 1</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 2</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 3</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 4</ListGroup.Item>\n//   </Card>\n// </Accordion>","map":{"version":3,"sources":["/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/main-components/DashBoard.js"],"names":["React","Calendar","NewProjectModal","UpcomingTasks","RecentlyCompletedTasks","ProjectCardsComponent","Container","Accordion","Row","Col","Card","ListGroup","useAccordionToggle","DashBoard","Component","constructor","props","onChange","date","setState","openModal","showNPM","handleModalClose","allTasks","handleProjectSubmit","obj","newObj","userId","authProps","loggedInUserId","projectService","postProject","completeTask","taskId","taskService","state","Date","inbox","trash","upcomingTasks","render","projects","filter","task","is_completed","CustomToggle","children","eventKey","color","changeContent","backgroundColor","border"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,sBAAP,MAAmC,6CAAnC;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,IAAzC,EAA+CC,SAA/C,EAA0DC,kBAA1D,QAAoF,iBAApF;AAEA,eAAe,MAAMC,SAAN,SAAwBb,KAAK,CAACc,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,QAZmB,GAYRC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAED,MAAAA;AAAF,KAAd,CAZA;;AAAA,SAanBE,SAbmB,GAaP,MAAM,KAAKD,QAAL,CAAc;AAAEE,MAAAA,OAAO,EAAE;AAAX,KAAd,CAbC;;AAAA,SAcnBC,gBAdmB,GAcA,MAAM,KAAKH,QAAL,CAAc;AAAEE,MAAAA,OAAO,EAAE;AAAX,KAAd,CAdN;;AAAA,SAenBE,QAfmB,GAeR,MAAM,KAAKP,KAAL,CAAWO,QAfT;;AAAA,SAiBnBC,mBAjBmB,GAiBIC,GAAD,IAAS;AAC7B,UAAIC,MAAM,qBAAQD,GAAR;AAAaE,QAAAA,MAAM,EAAE,KAAKX,KAAL,CAAWY,SAAX,CAAqBC;AAA1C,QAAV;;AACA,WAAKb,KAAL,CAAWc,cAAX,CAA0BC,WAA1B,CAAsCL,MAAtC;AACA,WAAKP,QAAL,CAAc;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KArBkB;;AAAA,SAuBnBW,YAvBmB,GAuBHC,MAAD,IAAY,KAAKjB,KAAL,CAAWkB,WAAX,CAAuBF,YAAvB,CAAoCC,MAApC,CAvBR;;AAEjB,SAAKE,KAAL,GAAa;AACXR,MAAAA,MAAM,EAAE,CADG;AAEXN,MAAAA,OAAO,EAAE,KAFE;AAGXH,MAAAA,IAAI,EAAE,IAAIkB,IAAJ,EAHK;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,KAAK,EAAE,EALI;AAMXC,MAAAA,aAAa,EAAE;AANJ,KAAb;AAQD;;AAeDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,mBAAmB,EAAE,KAAKhB,mBAA3C;AAAgE,MAAA,IAAI,EAAE,KAAKW,KAAL,CAAWd,OAAjF;AAA0F,MAAA,gBAAgB,EAAE,KAAKC,gBAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,MAApB;AAA2B,MAAA,QAAQ,EAAE,KAAKL,QAA1C;AAAoD,MAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWjB,IAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,qBAAD;AAAuB,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWyB,QAA5C;AAAsD,MAAA,SAAS,EAAE,KAAKrB,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,aAAD;AAAe,MAAA,aAAa,EAAE,KAAKe,KAAL,CAAWjB,IAAzC;AAA+C,MAAA,KAAK,EAAE,KAAKK,QAAL,GAAgBmB,MAAhB,CAAuBC,IAAI,IAAI,CAACA,IAAI,CAACC,YAArC,CAAtD;AAA0G,MAAA,YAAY,EAAE,KAAKZ,YAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAJF,EAQE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,sBAAD;AAAwB,MAAA,KAAK,EAAE,KAAKT,QAAL,EAA/B;AAAgD,MAAA,YAAY,EAAE,KAAKS,YAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CAFF,CADF;AAiBD;;AA5CoD;;AA+CvD,SAASa,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA;AAAtB,CAAtB,EAAqD;AACnD,QAAMC,aAAa,GAAGrC,kBAAkB,CAACmC,QAAD,EAAW,MAAM,CAAG,CAApB,CAAxC;AAEA,SACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAEF,KAAnB;AAA0BA,MAAAA,KAAK,EAAE,MAAjC;AAAyCG,MAAAA,MAAM,EAAE;AAAjD,KAFT;AAGE,IAAA,OAAO,EAAEF,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGH,QALH,CADF;AASD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport Calendar from 'react-calendar'\nimport NewProjectModal from '../sub-components/NewProjectModal.js'\nimport UpcomingTasks from '../sub-components/UpcomingTasks.js'\nimport RecentlyCompletedTasks from '../sub-components/RecentlyCompletedTasks.js'\nimport ProjectCardsComponent from '../sub-components/ProjectCardsComponent'\nimport { Container, Accordion, Row, Col, Card, ListGroup, useAccordionToggle } from 'react-bootstrap'\n\nexport default class DashBoard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userId: 1,\n      showNPM: false,\n      date: new Date(),\n      inbox: [],\n      trash: [],\n      upcomingTasks: []\n    }\n  }\n\n  onChange = date => this.setState({ date })\n  openModal = () => this.setState({ showNPM: true })\n  handleModalClose = () => this.setState({ showNPM: false })\n  allTasks = () => this.props.allTasks\n\n  handleProjectSubmit = (obj) => {\n    let newObj = { ...obj, userId: this.props.authProps.loggedInUserId }\n    this.props.projectService.postProject(newObj)\n    this.setState({ showNPM: false })\n  }\n\n  completeTask = (taskId) => this.props.taskService.completeTask(taskId)\n\n  render() {\n    return (\n      <Container fluid>\n        <NewProjectModal handleProjectSubmit={this.handleProjectSubmit} show={this.state.showNPM} handleModalClose={this.handleModalClose} />\n        <Row>\n          <Col sm={3}>\n            <Calendar className='mb-3' onChange={this.onChange} value={this.state.date} />\n          </Col>\n          <Col sm={6}>\n            <ProjectCardsComponent projects={this.props.projects} openModal={this.openModal} />\n            <UpcomingTasks dateFromState={this.state.date} tasks={this.allTasks().filter(task => !task.is_completed)} completeTask={this.completeTask} />\n          </Col>\n          <Col sm={3}>\n            <RecentlyCompletedTasks tasks={this.allTasks()} completeTask={this.completeTask} />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nfunction CustomToggle({ children, eventKey, color }) {\n  const changeContent = useAccordionToggle(eventKey, () => { })\n\n  return (\n    <button\n      type=\"button\"\n      style={{ backgroundColor: color, color: '#fff', border: 0 }}\n      onClick={changeContent}\n    >\n      {children}\n    </button>\n  )\n}\n\n// <Accordion defaultActiveKey=\"0\">\n//   <Card style={{ width: '100%', maxWidth: '100%' }}>\n//     <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n//       Inbox <i className=\"fa fa-fw fa-inbox\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//     </Card.Header>\n//     <ListGroup.Item>Inbox !</ListGroup.Item>\n//     <Card.Header style={{ backgroundColor: '#666666', color: '#fff' }}>\n//       <CustomToggle eventkey=\"1\" color='#666666'>\n//         Trash <i className=\"fa fa-fw fa-trash\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//       </CustomToggle>\n//     </Card.Header>\n//     <Accordion.Collapse eventkey=\"1\">\n//       <ListGroup.Item>Trash HERE!</ListGroup.Item>\n//     </Accordion.Collapse>\n//     <Card.Header style={{ backgroundColor: '#990033', color: '#fff' }}>\n//       Upcoming Deadlines <i className=\"fa fa-fw fa-hourglass-end\" style={{ fontSize: '1em', marginLeft: 5 }} />\n//     </Card.Header>\n//     <ListGroup.Item>Deadlines 1</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 2</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 3</ListGroup.Item>\n//     <ListGroup.Item>Deadlines 4</ListGroup.Item>\n//   </Card>\n// </Accordion>\n"]},"metadata":{},"sourceType":"module"}