{"ast":null,"code":"import _toConsumableArray from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";var NoteService=function NoteService(component){var _this=this;_classCallCheck(this,NoteService);this.fetchNotesForProject=function(projectId){fetch(\"\".concat(_this.workingURL,\"/projects/\").concat(projectId,\"/notes\"),{headers:{\"Authorization\":_this.component.props.authProps.token}}).then(function(response){return response.json();}).then(function(notes){return _this.component.setState({notes:notes});});};this.createNote=function(note,projectId){fetch(\"\".concat(_this.workingURL,\"/projects/\").concat(projectId,\"/notes\"),{headers:{\"Authorization\":_this.component.props.authProps.token,'Content-Type':'application/json',Accept:'application/json'},body:JSON.stringify(note),method:'POST'}).then(function(response){return response.json();}).then(function(note){_this.component.setState({notes:[].concat(_toConsumableArray(_this.component.state.notes),[note])});});};this.deleteNote=function(noteId){fetch(\"\".concat(_this.workingURL,\"/notes/\").concat(noteId),{//eslint-disable-line \nmethod:'DELETE',headers:{\"Authorization\":_this.component.props.authProps.token,'content-type':'application/json',Accept:'application/json'}}).then(function(response){return response.json();}).then(function(deletedNote){var notes=_this.component.state.notes;_this.component.setState({notes:notes.filter(function(note){return note.id!==deletedNote.id;})});});};this.component=component;this.workingURL='https://arcane-sands-50858.herokuapp.com';// this.workingURL = 'http://localhost:3000'\n};export default NoteService;","map":{"version":3,"sources":["/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/src/services/NoteService.js"],"names":["NoteService","component","fetchNotesForProject","projectId","fetch","workingURL","headers","props","authProps","token","then","response","json","notes","setState","createNote","note","Accept","body","JSON","stringify","method","state","deleteNote","noteId","deletedNote","filter","id"],"mappings":"qUAAMA,CAAAA,W,CACJ,qBAAYC,SAAZ,CAAuB,uDAOvBC,oBAPuB,CAOA,SAACC,SAAD,CAAe,CACpCC,KAAK,WAAI,KAAI,CAACC,UAAT,sBAAgCF,SAAhC,WAAmD,CACtDG,OAAO,CAAE,CACP,gBAAiB,KAAI,CAACL,SAAL,CAAeM,KAAf,CAAqBC,SAArB,CAA+BC,KADzC,CAD6C,CAAnD,CAAL,CAKGC,IALH,CAKQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EALhB,EAMGF,IANH,CAMQ,SAAAG,KAAK,QAAI,CAAA,KAAI,CAACZ,SAAL,CAAea,QAAf,CAAwB,CAAED,KAAK,CAALA,KAAF,CAAxB,CAAJ,EANb,EAOD,CAfsB,MAiBvBE,UAjBuB,CAiBV,SAACC,IAAD,CAAOb,SAAP,CAAqB,CAChCC,KAAK,WAAI,KAAI,CAACC,UAAT,sBAAgCF,SAAhC,WAAmD,CACtDG,OAAO,CAAE,CACP,gBAAiB,KAAI,CAACL,SAAL,CAAeM,KAAf,CAAqBC,SAArB,CAA+BC,KADzC,CAEP,eAAgB,kBAFT,CAGPQ,MAAM,CAAE,kBAHD,CAD6C,CAMtDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CANgD,CAOtDK,MAAM,CAAE,MAP8C,CAAnD,CAAL,CASGX,IATH,CASQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAThB,EAUGF,IAVH,CAUQ,SAAAM,IAAI,CAAI,CACZ,KAAI,CAACf,SAAL,CAAea,QAAf,CAAwB,CACtBD,KAAK,8BAAM,KAAI,CAACZ,SAAL,CAAeqB,KAAf,CAAqBT,KAA3B,GAAkCG,IAAlC,EADiB,CAAxB,EAGD,CAdH,EAeD,CAjCsB,MAmCvBO,UAnCuB,CAmCV,SAACC,MAAD,CAAY,CACvBpB,KAAK,WAAI,KAAI,CAACC,UAAT,mBAA6BmB,MAA7B,EAAuC,CAAE;AAC5CH,MAAM,CAAE,QADkC,CAE1Cf,OAAO,CAAE,CACP,gBAAiB,KAAI,CAACL,SAAL,CAAeM,KAAf,CAAqBC,SAArB,CAA+BC,KADzC,CAEP,eAAgB,kBAFT,CAGPQ,MAAM,CAAE,kBAHD,CAFiC,CAAvC,CAAL,CAQGP,IARH,CAQQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EARhB,EASGF,IATH,CASQ,SAAAe,WAAW,CAAI,CACnB,GAAMZ,CAAAA,KAAK,CAAG,KAAI,CAACZ,SAAL,CAAeqB,KAAf,CAAqBT,KAAnC,CACA,KAAI,CAACZ,SAAL,CAAea,QAAf,CAAwB,CACtBD,KAAK,CAAEA,KAAK,CAACa,MAAN,CAAa,SAAAV,IAAI,QAAIA,CAAAA,IAAI,CAACW,EAAL,GAAYF,WAAW,CAACE,EAA5B,EAAjB,CADe,CAAxB,EAGD,CAdH,EAeD,CAnDsB,CACrB,KAAK1B,SAAL,CAAiBA,SAAjB,CACA,KAAKI,UAAL,CAAkB,0CAAlB,CACA;AAED,C,CAiDH,cAAeL,CAAAA,WAAf","sourcesContent":["class NoteService {\n  constructor(component) {\n    this.component = component\n    this.workingURL = 'https://arcane-sands-50858.herokuapp.com'\n    // this.workingURL = 'http://localhost:3000'\n\n  }\n\n  fetchNotesForProject = (projectId) => {\n    fetch(`${this.workingURL}/projects/${projectId}/notes`, {\n      headers: {\n        \"Authorization\": this.component.props.authProps.token\n      }\n    })\n      .then(response => response.json())\n      .then(notes => this.component.setState({ notes }))\n  }\n\n  createNote = (note, projectId) => {\n    fetch(`${this.workingURL}/projects/${projectId}/notes`, {\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify(note),\n      method: 'POST'\n    })\n      .then(response => response.json())\n      .then(note => {\n        this.component.setState({\n          notes: [...this.component.state.notes, note]\n        })\n      })\n  }\n\n  deleteNote = (noteId) => {\n    fetch(`${this.workingURL}/notes/${noteId}`, { //eslint-disable-line \n      method: 'DELETE',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n    })\n      .then(response => response.json())\n      .then(deletedNote => {\n        const notes = this.component.state.notes\n        this.component.setState({\n          notes: notes.filter(note => note.id !== deletedNote.id)\n        })\n      })\n  }\n}\n\nexport default NoteService\n"]},"metadata":{},"sourceType":"module"}