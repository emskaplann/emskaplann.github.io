{"ast":null,"code":"import _classCallCheck from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Card,ListGroup}from'react-bootstrap';import TaskModal from'./TaskModal.js';import ChecklistService from'../../services/ChecklistService.js';import ItemService from'../../services/ItemService.js';var AllTasks=/*#__PURE__*/function(_React$Component){_inherits(AllTasks,_React$Component);function AllTasks(props){var _this;_classCallCheck(this,AllTasks);_this=_possibleConstructorReturn(this,_getPrototypeOf(AllTasks).call(this,props));_this.closeModal=function(){return _this.setState({isModalHidden:true});};_this.updateChecklistsWith=function(checklist){_this.setState({checklists:_this.state.checklists.map(function(list){return list.id===checklist.id?checklist:list;})});};_this.openModal=function(task){_this.ChecklistService.fetchChecklists(task.id);_this.setState({isModalHidden:false,task:task});};_this.state={isModalHidden:true,task:{id:1},checklists:[]};_this.ChecklistService=new ChecklistService(_assertThisInitialized(_this));_this.itemService=new ItemService(_assertThisInitialized(_this));return _this;}_createClass(AllTasks,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(nextState!==this.state)return true;return false;}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,title=_this$props.title,tasks=_this$props.tasks,openModal=_this$props.openModal,style=_this$props.style,completeTask=_this$props.completeTask;return React.createElement(Card,{className:\"mb-2\"},React.createElement(TaskModal,{itemService:this.itemService,checklistService:this.ChecklistService,authProps:this.props.authProps,task:this.state.task,show:!this.state.isModalHidden,checklists:this.state.checklists,closeModal:this.closeModal}),React.createElement(Card.Header,{style:style},React.createElement(\"div\",{className:\"float-left\"},title,\" \",React.createElement(\"i\",{className:\"fa fa-fw fa-th\",style:{fontSize:'1em',marginLeft:5}})),title!==\"Completed Tasks\"?React.createElement(\"div\",{className:\"float-right\",onClick:openModal},React.createElement(\"strong\",null,\"New\"),React.createElement(\"i\",{className:\"fa fa-fw fa-plus-square\",style:{fontSize:'1em',marginLeft:5}})):null),React.createElement(Card.Body,null,tasks.map(function(task){return React.createElement(\"div\",{key:\"task-item\".concat(task.id)},React.createElement(ListGroup.Item,{key:\"task-item-\".concat(task.id),className:\"d-flex\"},React.createElement(\"span\",{className:\"flex-grow-1\",onClick:function onClick(){return _this2.openModal(task);}},task.title),React.createElement(\"span\",null,title===\"Upcoming Tasks\"?React.createElement(\"i\",{onClick:function onClick(){return completeTask(task.id);},className:\"fa fa-fw fa-check\",style:{fontSize:'1.5em',color:'#d3d3d3',marginLeft:3}}):null)));})));}}]);return AllTasks;}(React.Component);export default AllTasks;// style={{ width: '850px' }}","map":{"version":3,"sources":["/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/src/components/sub-components/AllTasks.js"],"names":["React","Card","ListGroup","TaskModal","ChecklistService","ItemService","AllTasks","props","closeModal","setState","isModalHidden","updateChecklistsWith","checklist","checklists","state","map","list","id","openModal","task","fetchChecklists","itemService","nextProps","nextState","title","tasks","style","completeTask","authProps","fontSize","marginLeft","color","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap'\nimport TaskModal from './TaskModal.js'\nimport ChecklistService from '../../services/ChecklistService.js'\nimport ItemService from '../../services/ItemService.js';\n\n\nclass AllTasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalHidden: true,\n      task: { id: 1 },\n      checklists: [],\n    }\n    this.ChecklistService = new ChecklistService(this)\n    this.itemService = new ItemService(this)\n  }\n\n  closeModal = () => this.setState({ isModalHidden: true })\n\n  updateChecklistsWith = (checklist) => {\n    this.setState({\n      checklists: this.state.checklists.map(list => list.id === checklist.id ? checklist : list)\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState !== this.state) return true\n    return false\n  }\n\n  openModal = (task) => {\n    this.ChecklistService.fetchChecklists(task.id)\n    this.setState({ isModalHidden: false, task: task })\n  }\n\n  render() {\n    const { title, tasks, openModal, style, completeTask } = this.props\n    return (\n      <Card className='mb-2' >\n        <TaskModal itemService={this.itemService} checklistService={this.ChecklistService} authProps={this.props.authProps} task={this.state.task} show={!this.state.isModalHidden} checklists={this.state.checklists} closeModal={this.closeModal} />\n        <Card.Header style={style}>\n          <div className=\"float-left\">\n            {title} <i className=\"fa fa-fw fa-th\" style={{ fontSize: '1em', marginLeft: 5 }} />\n          </div>\n          {title !== \"Completed Tasks\" ?\n            <div className=\"float-right\" onClick={openModal}>\n              <strong>New</strong><i className=\"fa fa-fw fa-plus-square\" style={{ fontSize: '1em', marginLeft: 5 }} />\n            </div>\n            : null\n          }\n        </Card.Header>\n        <Card.Body>\n          {\n            tasks.map(task =>\n              <div key={`task-item${task.id}`}>\n                <ListGroup.Item key={`task-item-${task.id}`} className='d-flex' >\n                  <span className='flex-grow-1' onClick={() => this.openModal(task)}>\n                    {task.title}\n                  </span>\n                  <span>\n                    {title === \"Upcoming Tasks\" ? <i onClick={() => completeTask(task.id)} className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: '#d3d3d3', marginLeft: 3 }} /> : null}\n                    {/* {title === \"All Tasks\" ? <i onClick={() => completeTask(task.id)} className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: `${task.is_completed ? 'green' : '#d3d3d3'}`, marginLeft: 3 }} /> : null} */}\n\n                  </span>\n                </ListGroup.Item>\n              </div>\n            )\n          }\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nexport default AllTasks;\n\n// style={{ width: '850px' }}\n"]},"metadata":{},"sourceType":"module"}