{"ast":null,"code":"import _toConsumableArray from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";var ItemService=function ItemService(component){var _this=this;_classCallCheck(this,ItemService);this.createNewItem=function(checklistId,item){fetch(\"https://arcane-sands-50858.herokuapp.com/checklists/\".concat(checklistId,\"/items\"),{//eslint-disable-line \nmethod:'POST',headers:{\"Authorization\":_this.component.props.authProps.token,'content-type':'application/json',Accept:'application/json'},body:JSON.stringify({item:item})}).then(function(response){return response.json();}).then(function(newItem){var oldChecklist=_this.component.state.checklists.find(function(list){return list.id===checklistId;});var newChecklist=Object.assign({},oldChecklist);newChecklist.items=[].concat(_toConsumableArray(newChecklist.items),[newItem]);_this.component.updateChecklistsWith(newChecklist);});};this.completeItem=function(itemId,bool,checklistId){fetch(\"https://arcane-sands-50858.herokuapp.com/items/\".concat(itemId),{method:'PATCH',headers:{\"Authorization\":_this.component.props.authProps.token,\"Content-Type\":\"application/json\",Accept:\"application/json\"},body:JSON.stringify({item:{is_completed:bool}})}).then(function(r){return r.json();}).then(function(editedItem){var oldChecklist=_this.component.state.checklists.find(function(list){return list.id===checklistId;});var newChecklist=Object.assign({},oldChecklist);newChecklist.items=newChecklist.items.map(function(item){return editedItem.id===item.id?editedItem:item;});_this.component.updateChecklistsWith(newChecklist);});};this.deleteItem=function(itemId,checklistId){fetch(\"https://arcane-sands-50858.herokuapp.com/items/\".concat(itemId),{method:'DELETE',headers:{\"Authorization\":_this.component.props.authProps.token,\"Content-Type\":\"application/json\",Accept:\"application/json\"}}).then(function(r){return r.json();}).then(function(item){var oldChecklist=_this.component.state.checklists.find(function(list){return list.id===checklistId;});var newChecklist=Object.assign({},oldChecklist);newChecklist.items=newChecklist.items.filter(function(oldItem){return oldItem.id!==item.id;});_this.component.setState({checklists:_this.component.state.checklists.map(function(list){return list.id===newChecklist.id?newChecklist:list;})});});};this.component=component;};export{ItemService as default};","map":{"version":3,"sources":["/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/src/services/ItemService.js"],"names":["ItemService","component","createNewItem","checklistId","item","fetch","method","headers","props","authProps","token","Accept","body","JSON","stringify","then","response","json","newItem","oldChecklist","state","checklists","find","list","id","newChecklist","Object","assign","items","updateChecklistsWith","completeItem","itemId","bool","is_completed","r","editedItem","map","deleteItem","filter","oldItem","setState"],"mappings":"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","sourcesContent":["export default class ItemService {\n  constructor(component) {\n    this.component = component\n  }\n\n  createNewItem = (checklistId, item) => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/checklists/${checklistId}/items`, { //eslint-disable-line \n      method: 'POST',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        item\n      })\n    })\n      .then(response => response.json())\n      .then(newItem => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId)\n        const newChecklist = Object.assign({}, oldChecklist)\n        newChecklist.items = [...newChecklist.items, newItem]\n        this.component.updateChecklistsWith(newChecklist)\n      })\n  }\n\n  completeItem = (itemId, bool, checklistId) => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/items/${itemId}`, {\n      method: 'PATCH',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }, body: JSON.stringify({\n        item: {\n          is_completed: bool\n        }\n      })\n    })\n      .then(r => r.json())\n      .then(editedItem => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId)\n        const newChecklist = Object.assign({}, oldChecklist)\n        newChecklist.items = newChecklist.items.map(item => editedItem.id === item.id ? editedItem : item)\n        this.component.updateChecklistsWith(newChecklist)\n      })\n  }\n\n  deleteItem = (itemId, checklistId) => {\n    fetch(`https://arcane-sands-50858.herokuapp.com/items/${itemId}`, {\n      method: 'DELETE',\n      headers: {\n        \"Authorization\": this.component.props.authProps.token,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(r => r.json())\n      .then(item => {\n        const oldChecklist = this.component.state.checklists.find(list => list.id === checklistId)\n        const newChecklist = Object.assign({}, oldChecklist)\n        newChecklist.items = newChecklist.items.filter(oldItem => oldItem.id !== item.id)\n        this.component.setState({\n          checklists: this.component.state.checklists.map(list => list.id === newChecklist.id ? newChecklist : list)\n        })\n      })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}