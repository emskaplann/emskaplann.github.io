{"ast":null,"code":"import _classCallCheck from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import ProjectService from'../../services/ProjectService.js';import TaskService from'../../services/TaskService.js';import DashBoard from'./DashBoard';import Projects from'./Projects';export var MainViewRenderProps=/*#__PURE__*/function(_Component){_inherits(MainViewRenderProps,_Component);function MainViewRenderProps(props){var _this;_classCallCheck(this,MainViewRenderProps);_this=_possibleConstructorReturn(this,_getPrototypeOf(MainViewRenderProps).call(this,props));_this.findProjectWith=function(id){return _this.state.projects.find(function(project){return project.id===parseInt(id);});};_this.handleTaskSubmit=function(obj){return _this.projectService.postTask(obj);};_this.state={token:null,loggedInUserId:null,projects:[],allTasks:[]};_this.projectService=new ProjectService(_assertThisInitialized(_this));_this.taskService=new TaskService(_assertThisInitialized(_this));return _this;}_createClass(MainViewRenderProps,[{key:\"componentDidMount\",value:function componentDidMount(){this.projectService.fetchProjects(this.props.authProps.loggedInUserId);}},{key:\"render\",value:function render(){switch(this.props.children){case DashBoard:return React.createElement(this.props.children,{allTasks:this.state.allTasks,projects:this.state.projects,projectService:this.projectService,taskService:this.taskService,authProps:this.props.authProps});case Projects:return React.createElement(this.props.children,{projectService:this.projectService,taskService:this.taskService,project:this.findProjectWith(this.props.id),authProps:this.props.authProps,handleTaskSubmit:this.handleTaskSubmit});default:return React.createElement(this.props.children,{tasks:this.state.allTasks,taskService:this.taskService,projects:this.state.projects,handleTaskSubmit:this.handleTaskSubmit,authProps:this.props.authProps});}}}]);return MainViewRenderProps;}(Component);export default MainViewRenderProps;{/* <DashBoard projectService={this.projectService} taskService={this.taskService} projects={this.state.projects} authProps={this.authProps()} /> */}{/* <Projects project={this.findProjectWith(useParams().id)} handleTaskSubmit={this.handleTaskSubmit} authProps={this.authProps()} /> */}{/* <Tasks tasks={this.state.allTasks} projects={this.state.projects} handleTaskSubmit={this.handleTaskSubmit} authProps={this.authProps()} /> */}","map":{"version":3,"sources":["/Users/emskaplann/final_projects/03-module/emskaplann.github.io/to-do-app/src/components/main-components/MainViewRenderProps.js"],"names":["React","Component","ProjectService","TaskService","DashBoard","Projects","MainViewRenderProps","props","findProjectWith","id","state","projects","find","project","parseInt","handleTaskSubmit","obj","projectService","postTask","token","loggedInUserId","allTasks","taskService","fetchProjects","authProps","children"],"mappings":"s8BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,UAAaC,CAAAA,mBAAb,6EACE,6BAAYC,KAAZ,CAAmB,qDACjB,qFAAMA,KAAN,GADiB,MAgBnBC,eAhBmB,CAgBD,SAACC,EAAD,QAAQ,OAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACJ,EAAR,GAAeK,QAAQ,CAACL,EAAD,CAA3B,EAAhC,CAAR,EAhBC,OAkBnBM,gBAlBmB,CAkBA,SAAAC,GAAG,QAAI,OAAKC,cAAL,CAAoBC,QAApB,CAA6BF,GAA7B,CAAJ,EAlBH,CAEjB,MAAKN,KAAL,CAAa,CACXS,KAAK,CAAE,IADI,CAEXC,cAAc,CAAE,IAFL,CAGXT,QAAQ,CAAE,EAHC,CAIXU,QAAQ,CAAE,EAJC,CAAb,CAMA,MAAKJ,cAAL,CAAsB,GAAIf,CAAAA,cAAJ,+BAAtB,CACA,MAAKoB,WAAL,CAAmB,GAAInB,CAAAA,WAAJ,+BAAnB,CATiB,aAUlB,CAXH,6FAasB,CAClB,KAAKc,cAAL,CAAoBM,aAApB,CAAkC,KAAKhB,KAAL,CAAWiB,SAAX,CAAqBJ,cAAvD,EACD,CAfH,uCAqBW,CACP,OAAQ,KAAKb,KAAL,CAAWkB,QAAnB,EACE,IAAKrB,CAAAA,SAAL,CACE,MAAO,0BAAM,KAAN,CAAY,QAAZ,EAAqB,QAAQ,CAAE,KAAKM,KAAL,CAAWW,QAA1C,CAAoD,QAAQ,CAAE,KAAKX,KAAL,CAAWC,QAAzE,CAAmF,cAAc,CAAE,KAAKM,cAAxG,CAAwH,WAAW,CAAE,KAAKK,WAA1I,CAAuJ,SAAS,CAAE,KAAKf,KAAL,CAAWiB,SAA7K,EAAP,CACF,IAAKnB,CAAAA,QAAL,CACE,MAAO,0BAAM,KAAN,CAAY,QAAZ,EAAqB,cAAc,CAAE,KAAKY,cAA1C,CAA0D,WAAW,CAAE,KAAKK,WAA5E,CAAyF,OAAO,CAAE,KAAKd,eAAL,CAAqB,KAAKD,KAAL,CAAWE,EAAhC,CAAlG,CAAuI,SAAS,CAAE,KAAKF,KAAL,CAAWiB,SAA7J,CAAwK,gBAAgB,CAAE,KAAKT,gBAA/L,EAAP,CACF,QACE,MAAO,0BAAM,KAAN,CAAY,QAAZ,EAAqB,KAAK,CAAE,KAAKL,KAAL,CAAWW,QAAvC,CAAiD,WAAW,CAAE,KAAKC,WAAnE,CAAgF,QAAQ,CAAE,KAAKZ,KAAL,CAAWC,QAArG,CAA+G,gBAAgB,CAAE,KAAKI,gBAAtI,CAAwJ,SAAS,CAAE,KAAKR,KAAL,CAAWiB,SAA9K,EAAP,CANJ,CAQD,CA9BH,iCAAyCvB,SAAzC,EAiCA,cAAeK,CAAAA,mBAAf,CAEA,CAAC,mJAAqJ,CACtJ,CAAC,uIAAyI,CAC1I,CAAC,gJAAkJ","sourcesContent":["import React, { Component } from 'react';\nimport ProjectService from '../../services/ProjectService.js'\nimport TaskService from '../../services/TaskService.js'\nimport DashBoard from './DashBoard'\nimport Projects from './Projects'\n\nexport class MainViewRenderProps extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      token: null,\n      loggedInUserId: null,\n      projects: [],\n      allTasks: [],\n    }\n    this.projectService = new ProjectService(this)\n    this.taskService = new TaskService(this)\n  }\n\n  componentDidMount() {\n    this.projectService.fetchProjects(this.props.authProps.loggedInUserId)\n  }\n\n  findProjectWith = (id) => this.state.projects.find(project => project.id === parseInt(id))\n\n  handleTaskSubmit = obj => this.projectService.postTask(obj)\n\n  render() {\n    switch (this.props.children) {\n      case DashBoard:\n        return <this.props.children allTasks={this.state.allTasks} projects={this.state.projects} projectService={this.projectService} taskService={this.taskService} authProps={this.props.authProps} />\n      case Projects:\n        return <this.props.children projectService={this.projectService} taskService={this.taskService} project={this.findProjectWith(this.props.id)} authProps={this.props.authProps} handleTaskSubmit={this.handleTaskSubmit} />\n      default:\n        return <this.props.children tasks={this.state.allTasks} taskService={this.taskService} projects={this.state.projects} handleTaskSubmit={this.handleTaskSubmit} authProps={this.props.authProps} />\n    }\n  }\n}\n\nexport default MainViewRenderProps;\n\n{/* <DashBoard projectService={this.projectService} taskService={this.taskService} projects={this.state.projects} authProps={this.authProps()} /> */ }\n{/* <Projects project={this.findProjectWith(useParams().id)} handleTaskSubmit={this.handleTaskSubmit} authProps={this.authProps()} /> */ }\n{/* <Tasks tasks={this.state.allTasks} projects={this.state.projects} handleTaskSubmit={this.handleTaskSubmit} authProps={this.authProps()} /> */ }"]},"metadata":{},"sourceType":"module"}