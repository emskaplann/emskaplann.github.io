{"ast":null,"code":"var _jsxFileName = \"/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/sub-components/AllTasks.js\";\nimport React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport TaskModal from './TaskModal.js';\nimport ChecklistService from '../../services/ChecklistService.js';\nimport ItemService from '../../services/ItemService.js';\n\nclass AllTasks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.closeModal = () => this.setState({\n      isModalHidden: true\n    });\n\n    this.updateChecklistsWith = checklist => {\n      this.setState({\n        checklists: this.state.checklists.map(list => list.id === checklist.id ? checklist : list)\n      });\n    };\n\n    this.openModal = task => {\n      this.ChecklistService.fetchChecklists(task.id);\n      this.setState({\n        isModalHidden: false,\n        task: task\n      });\n    };\n\n    this.state = {\n      isModalHidden: true,\n      task: {\n        id: 1\n      },\n      checklists: []\n    };\n    this.ChecklistService = new ChecklistService(this);\n    this.itemService = new ItemService(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState !== this.state) return true;\n    return false;\n  }\n\n  render() {\n    const _this$props = this.props,\n          title = _this$props.title,\n          tasks = _this$props.tasks,\n          openModal = _this$props.openModal,\n          style = _this$props.style,\n          completeTask = _this$props.completeTask;\n    return React.createElement(Card, {\n      className: \"mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(TaskModal, {\n      itemService: this.itemService,\n      checklistService: this.ChecklistService,\n      authProps: this.props.authProps,\n      task: this.state.task,\n      show: !this.state.isModalHidden,\n      checklists: this.state.checklists,\n      closeModal: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Card.Header, {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, title, \" \", React.createElement(\"i\", {\n      className: \"fa fa-fw fa-th\",\n      style: {\n        fontSize: '1em',\n        marginLeft: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), title !== \"Completed Tasks\" ? React.createElement(\"div\", {\n      className: \"float-right\",\n      onClick: openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"New\"), React.createElement(\"i\", {\n      className: \"fa fa-fw fa-plus-square\",\n      style: {\n        fontSize: '1em',\n        marginLeft: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })) : null), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, tasks.map(task => React.createElement(\"div\", {\n      key: \"task-item\".concat(task.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      key: \"task-item-\".concat(task.id),\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"flex-grow-1\",\n      onClick: () => this.openModal(task),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, task.title), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, title === \"Upcoming Tasks\" ? React.createElement(\"i\", {\n      onClick: () => completeTask(task.id),\n      className: \"fa fa-fw fa-check\",\n      style: {\n        fontSize: '1.5em',\n        color: '#d3d3d3',\n        marginLeft: 3\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }) : null))))));\n  }\n\n}\n\nexport default AllTasks; // style={{ width: '850px' }}","map":{"version":3,"sources":["/Users/emskaplann/final_projects/04-module/to-do-app-frontend/src/components/sub-components/AllTasks.js"],"names":["React","Card","ListGroup","TaskModal","ChecklistService","ItemService","AllTasks","Component","constructor","props","closeModal","setState","isModalHidden","updateChecklistsWith","checklist","checklists","state","map","list","id","openModal","task","fetchChecklists","itemService","shouldComponentUpdate","nextProps","nextState","render","title","tasks","style","completeTask","authProps","fontSize","marginLeft","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap'\nimport TaskModal from './TaskModal.js'\nimport ChecklistService from '../../services/ChecklistService.js'\nimport ItemService from '../../services/ItemService.js';\n\n\nclass AllTasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalHidden: true,\n      task: { id: 1 },\n      checklists: [],\n    }\n    this.ChecklistService = new ChecklistService(this)\n    this.itemService = new ItemService(this)\n  }\n\n  closeModal = () => this.setState({ isModalHidden: true })\n\n  updateChecklistsWith = (checklist) => {\n    this.setState({\n      checklists: this.state.checklists.map(list => list.id === checklist.id ? checklist : list)\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState !== this.state) return true\n    return false\n  }\n\n  openModal = (task) => {\n    this.ChecklistService.fetchChecklists(task.id)\n    this.setState({ isModalHidden: false, task: task })\n  }\n\n  render() {\n    const { title, tasks, openModal, style, completeTask } = this.props\n    return (\n      <Card className='mb-2' >\n        <TaskModal itemService={this.itemService} checklistService={this.ChecklistService} authProps={this.props.authProps} task={this.state.task} show={!this.state.isModalHidden} checklists={this.state.checklists} closeModal={this.closeModal} />\n        <Card.Header style={style}>\n          <div className=\"float-left\">\n            {title} <i className=\"fa fa-fw fa-th\" style={{ fontSize: '1em', marginLeft: 5 }} />\n          </div>\n          {title !== \"Completed Tasks\" ?\n            <div className=\"float-right\" onClick={openModal}>\n              <strong>New</strong><i className=\"fa fa-fw fa-plus-square\" style={{ fontSize: '1em', marginLeft: 5 }} />\n            </div>\n            : null\n          }\n        </Card.Header>\n        <Card.Body>\n          {\n            tasks.map(task =>\n              <div key={`task-item${task.id}`}>\n                <ListGroup.Item key={`task-item-${task.id}`} className='d-flex' >\n                  <span className='flex-grow-1' onClick={() => this.openModal(task)}>\n                    {task.title}\n                  </span>\n                  <span>\n                    {title === \"Upcoming Tasks\" ? <i onClick={() => completeTask(task.id)} className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: '#d3d3d3', marginLeft: 3 }} /> : null}\n                    {/* {title === \"All Tasks\" ? <i onClick={() => completeTask(task.id)} className=\"fa fa-fw fa-check\" style={{ fontSize: '1.5em', color: `${task.is_completed ? 'green' : '#d3d3d3'}`, marginLeft: 3 }} /> : null} */}\n\n                  </span>\n                </ListGroup.Item>\n              </div>\n            )\n          }\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nexport default AllTasks;\n\n// style={{ width: '850px' }}\n"]},"metadata":{},"sourceType":"module"}